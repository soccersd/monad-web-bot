{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useAppContext}from'../context/AppContext';import'./LogsPage.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function LogsPage(){const{tasks,isLoadingTasks,taskError,fetchTasks}=useAppContext();const[selectedTaskId,setSelectedTaskId]=useState(null);const[selectedTask,setSelectedTask]=useState(null);const[isLoadingDetails,setIsLoadingDetails]=useState(false);const[detailsError,setDetailsError]=useState(null);const[filterStatus,setFilterStatus]=useState('all');// API base URL from environment or default\nconst API_BASE_URL=process.env.REACT_APP_API_BASE_URL||'http://localhost:8000';// Fetch details for a specific task\nconst fetchTaskDetails=async taskId=>{if(!taskId)return;setIsLoadingDetails(true);try{const response=await fetch(`${API_BASE_URL}/api/v1/tasks/${taskId}`);if(!response.ok){throw new Error(`Failed to fetch task details for ID: ${taskId}`);}const data=await response.json();setSelectedTask(data);setDetailsError(null);}catch(err){setDetailsError(err.message);}finally{setIsLoadingDetails(false);}};// Auto-select the newest task when tasks are loaded or changed\nuseEffect(()=>{if(tasks.length>0&&!selectedTaskId){setSelectedTaskId(tasks[0].id);}},[tasks,selectedTaskId]);// Fetch details when a task is selected\nuseEffect(()=>{if(selectedTaskId){fetchTaskDetails(selectedTaskId);// Set up polling for in-progress tasks\nconst pollInterval=setInterval(()=>{var _selectedTask$status,_selectedTask$status2;if(selectedTask&&((_selectedTask$status=selectedTask.status)===null||_selectedTask$status===void 0?void 0:_selectedTask$status.toLowerCase())!=='completed'&&((_selectedTask$status2=selectedTask.status)===null||_selectedTask$status2===void 0?void 0:_selectedTask$status2.toLowerCase())!=='failed'){fetchTaskDetails(selectedTaskId);}},5000);return()=>clearInterval(pollInterval);}},[selectedTaskId,selectedTask===null||selectedTask===void 0?void 0:selectedTask.status]);const handleTaskSelect=taskId=>{setSelectedTaskId(taskId);};const formatTimestamp=timestamp=>{if(!timestamp)return'N/A';if(timestamp instanceof Date){return timestamp.toLocaleString();}return new Date(timestamp).toLocaleString();};const getStatusBadge=status=>{const statusLower=(status===null||status===void 0?void 0:status.toLowerCase())||'pending';let badgeColor='#e9ecef';// Default gray\nlet textColor='#6c757d';switch(statusLower){case'running':badgeColor='#cfe2ff';textColor='#0a58ca';break;case'completed':badgeColor='#d1e7dd';textColor='#146c43';break;case'failed':badgeColor='#f8d7da';textColor='#dc3545';break;default:break;}return/*#__PURE__*/_jsx(\"span\",{style:{display:'inline-block',padding:'0.2rem 0.5rem',borderRadius:'4px',fontSize:'0.75rem',fontWeight:'500',backgroundColor:badgeColor,color:textColor,textAlign:'center',minWidth:'80px',whiteSpace:'nowrap'},children:statusLower==='running'?'Running':statusLower==='completed'?'Completed':statusLower==='failed'?'Failed':'Pending'});};// Filter tasks based on selected status\nconst filteredTasks=tasks.filter(task=>{var _task$status;if(filterStatus==='all')return true;return((_task$status=task.status)===null||_task$status===void 0?void 0:_task$status.toLowerCase())===filterStatus;});return/*#__PURE__*/_jsxs(\"div\",{style:{height:'100%',display:'flex',flexDirection:'column'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'space-between',alignItems:'center',marginBottom:'16px'},children:[/*#__PURE__*/_jsx(\"h2\",{style:{margin:0,fontSize:'1.25rem',fontWeight:'600'},children:\"Task Logs\"}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',gap:'8px'},children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setFilterStatus('all'),style:{backgroundColor:filterStatus==='all'?'#ffedf2':'transparent',border:'1px solid #ffd6df',color:filterStatus==='all'?'#ffb6c1':'#333',padding:'4px 10px',borderRadius:'4px',cursor:'pointer',fontSize:'0.8rem',fontWeight:filterStatus==='all'?'600':'400',marginRight:'4px'},children:\"All\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setFilterStatus('pending'),style:{backgroundColor:filterStatus==='pending'?'#ffedf2':'transparent',border:'1px solid #ffd6df',color:filterStatus==='pending'?'#ffb6c1':'#333',padding:'4px 10px',borderRadius:'4px',cursor:'pointer',fontSize:'0.8rem',fontWeight:filterStatus==='pending'?'600':'400',marginRight:'4px'},children:\"Pending\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setFilterStatus('running'),style:{backgroundColor:filterStatus==='running'?'#ffedf2':'transparent',border:'1px solid #ffd6df',color:filterStatus==='running'?'#ffb6c1':'#333',padding:'4px 10px',borderRadius:'4px',cursor:'pointer',fontSize:'0.8rem',fontWeight:filterStatus==='running'?'600':'400',marginRight:'4px'},children:\"Running\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setFilterStatus('completed'),style:{backgroundColor:filterStatus==='completed'?'#ffedf2':'transparent',border:'1px solid #ffd6df',color:filterStatus==='completed'?'#ffb6c1':'#333',padding:'4px 10px',borderRadius:'4px',cursor:'pointer',fontSize:'0.8rem',fontWeight:filterStatus==='completed'?'600':'400'},children:\"Completed\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setFilterStatus('failed'),style:{backgroundColor:filterStatus==='failed'?'#ffedf2':'transparent',border:'1px solid #ffd6df',color:filterStatus==='failed'?'#ffb6c1':'#333',padding:'4px 10px',borderRadius:'4px',cursor:'pointer',fontSize:'0.8rem',fontWeight:filterStatus==='failed'?'600':'400'},children:\"Failed\"}),/*#__PURE__*/_jsx(\"button\",{onClick:fetchTasks,style:{backgroundColor:'transparent',border:'1px solid #ffd6df',color:'#333',padding:'4px 10px',borderRadius:'4px',cursor:'pointer',fontSize:'0.8rem',marginLeft:'8px'},children:isLoadingTasks?'Refreshing...':'â†» Refresh'})]})]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'grid',gridTemplateColumns:'350px 1fr',gap:'16px',flex:'1',overflow:'hidden'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{backgroundColor:'white',borderRadius:'8px',border:'1px solid #e9ecef',padding:'16px',display:'flex',flexDirection:'column',height:'100%',overflow:'hidden'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'space-between',borderBottom:'1px solid #e9ecef',paddingBottom:'12px',marginBottom:'12px'},children:[/*#__PURE__*/_jsx(\"h3\",{style:{margin:0,fontSize:'0.9rem',fontWeight:'600'},children:\"Recent Tasks\"}),/*#__PURE__*/_jsxs(\"span\",{style:{fontSize:'0.8rem',color:'#6c757d',marginTop:'2px'},children:[filteredTasks.length,\" \",filteredTasks.length===1?'task':'tasks']})]}),isLoadingTasks&&tasks.length===0?/*#__PURE__*/_jsx(\"div\",{style:{padding:'20px',textAlign:'center',color:'#6c757d'},children:\"Loading tasks...\"}):filteredTasks.length===0?/*#__PURE__*/_jsxs(\"div\",{style:{padding:'20px',textAlign:'center',color:'#6c757d'},children:[\"No \",filterStatus!=='all'?filterStatus:'',\" tasks found\"]}):/*#__PURE__*/_jsx(\"div\",{style:{overflow:'auto',flex:'1'},children:filteredTasks.map(task=>/*#__PURE__*/_jsxs(\"div\",{onClick:()=>handleTaskSelect(task.id),style:{padding:'12px',marginBottom:'6px',borderRadius:'6px',backgroundColor:selectedTaskId===task.id?'#f0ebfa':'white',cursor:'pointer',borderLeft:selectedTaskId===task.id?'3px solid #8359d4':'3px solid transparent',transition:'background-color 0.15s ease',display:'flex',flexDirection:'column',gap:'8px'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'space-between',alignItems:'center'},children:[getStatusBadge(task.status),/*#__PURE__*/_jsx(\"span\",{style:{fontSize:'0.75rem',color:'#6c757d'},children:formatTimestamp(task.startTime||task.start_time).split(' ')[1]})]}),/*#__PURE__*/_jsx(\"div\",{style:{fontWeight:'500',fontSize:'0.85rem',color:'#343a40',whiteSpace:'nowrap',overflow:'hidden',textOverflow:'ellipsis'},children:task.task_type||task.description||'Task'}),/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:'0.75rem',color:'#6c757d'},children:[\"ID: \",task.id.substring(0,8),\"...\"]})]},task.id))})]}),/*#__PURE__*/_jsxs(\"div\",{style:{backgroundColor:'white',borderRadius:'8px',border:'1px solid #e9ecef',padding:'16px',display:'flex',flexDirection:'column',height:'100%',overflow:'hidden'},children:[/*#__PURE__*/_jsx(\"div\",{style:{borderBottom:'1px solid #e9ecef',paddingBottom:'12px',marginBottom:'12px'},children:/*#__PURE__*/_jsx(\"h3\",{style:{margin:0,fontSize:'0.9rem',fontWeight:'600'},children:\"Task Details\"})}),taskError&&/*#__PURE__*/_jsx(\"div\",{style:{backgroundColor:'#f8d7da',color:'#721c24',padding:'8px 12px',marginBottom:'16px',borderRadius:'4px',fontSize:'0.85rem',border:'1px solid #f5c6cb'},children:taskError}),detailsError&&/*#__PURE__*/_jsx(\"div\",{style:{backgroundColor:'#f8d7da',color:'#721c24',padding:'8px 12px',marginBottom:'16px',borderRadius:'4px',fontSize:'0.85rem',border:'1px solid #f5c6cb'},children:detailsError}),isLoadingDetails&&/*#__PURE__*/_jsx(\"div\",{style:{padding:'40px 0',textAlign:'center',color:'#6c757d',flex:'1',display:'flex',alignItems:'center',justifyContent:'center'},children:\"Loading details...\"}),!isLoadingDetails&&selectedTask&&/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flexDirection:'column',height:'100%'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{backgroundColor:'#f8f9fa',borderRadius:'6px',padding:'12px',marginBottom:'16px'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'space-between',alignItems:'center',marginBottom:'12px'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{fontFamily:'monospace',fontSize:'0.8rem',color:'#6c757d'},children:[\"ID: \",selectedTask.id||selectedTask.task_id]}),getStatusBadge(selectedTask.status)]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'grid',gridTemplateColumns:'auto 1fr',gap:'8px 24px',fontSize:'0.85rem'},children:[/*#__PURE__*/_jsx(\"div\",{style:{fontWeight:'600',color:'#495057'},children:\"Type:\"}),/*#__PURE__*/_jsx(\"div\",{children:selectedTask.task_type||selectedTask.description||'Task'}),/*#__PURE__*/_jsx(\"div\",{style:{fontWeight:'600',color:'#495057'},children:\"Started:\"}),/*#__PURE__*/_jsx(\"div\",{children:formatTimestamp(selectedTask.start_time)}),selectedTask.end_time&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{style:{fontWeight:'600',color:'#495057'},children:\"Completed:\"}),/*#__PURE__*/_jsx(\"div\",{children:formatTimestamp(selectedTask.end_time)})]}),selectedTask.description&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{style:{fontWeight:'600',color:'#495057'},children:\"Description:\"}),/*#__PURE__*/_jsx(\"div\",{children:selectedTask.description})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flexDirection:'column',flex:'1',overflow:'hidden'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'space-between',alignItems:'center',marginBottom:'8px'},children:[/*#__PURE__*/_jsx(\"h4\",{style:{margin:0,fontSize:'0.9rem',fontWeight:'600'},children:\"Logs\"}),selectedTask.logs&&/*#__PURE__*/_jsxs(\"span\",{style:{fontSize:'0.8rem',color:'#6c757d'},children:[selectedTask.logs.length,\" entries\"]})]}),/*#__PURE__*/_jsx(\"div\",{style:{backgroundColor:'#f1f3f5',borderRadius:'6px',padding:'12px',fontFamily:'monospace',fontSize:'0.85rem',flex:'1',overflow:'auto',border:'1px solid #e9ecef'},children:selectedTask.logs&&selectedTask.logs.length>0?selectedTask.logs.map((log,index)=>/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'4px',lineHeight:'1.4',display:'flex',alignItems:'baseline',gap:'8px'},children:[/*#__PURE__*/_jsx(\"span\",{style:{color:'#6c757d',fontSize:'0.75rem',whiteSpace:'nowrap'},children:formatTimestamp(log.timestamp).split(' ')[1]}),/*#__PURE__*/_jsx(\"span\",{style:{color:log.level==='error'?'#dc3545':log.level==='warning'?'#fd7e14':log.level==='debug'?'#6c757d':'#212529'},children:log.message})]},index)):/*#__PURE__*/_jsx(\"div\",{style:{color:'#6c757d',fontStyle:'italic',textAlign:'center',padding:'20px 0'},children:\"No logs available\"})})]})]}),!isLoadingDetails&&!selectedTask&&!detailsError&&/*#__PURE__*/_jsx(\"div\",{style:{padding:'40px 0',textAlign:'center',color:'#6c757d',flex:'1',display:'flex',alignItems:'center',justifyContent:'center'},children:\"Select a task to view details\"})]})]})]});}export default LogsPage;","map":{"version":3,"names":["React","useState","useEffect","useAppContext","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","LogsPage","tasks","isLoadingTasks","taskError","fetchTasks","selectedTaskId","setSelectedTaskId","selectedTask","setSelectedTask","isLoadingDetails","setIsLoadingDetails","detailsError","setDetailsError","filterStatus","setFilterStatus","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","fetchTaskDetails","taskId","response","fetch","ok","Error","data","json","err","message","length","id","pollInterval","setInterval","_selectedTask$status","_selectedTask$status2","status","toLowerCase","clearInterval","handleTaskSelect","formatTimestamp","timestamp","Date","toLocaleString","getStatusBadge","statusLower","badgeColor","textColor","style","display","padding","borderRadius","fontSize","fontWeight","backgroundColor","color","textAlign","minWidth","whiteSpace","children","filteredTasks","filter","task","_task$status","height","flexDirection","justifyContent","alignItems","marginBottom","margin","gap","onClick","border","cursor","marginRight","marginLeft","gridTemplateColumns","flex","overflow","borderBottom","paddingBottom","marginTop","map","borderLeft","transition","startTime","start_time","split","textOverflow","task_type","description","substring","fontFamily","task_id","end_time","logs","log","index","lineHeight","level","fontStyle"],"sources":["C:/Users/cymst/Documents/monad bot/frontend/src/components/LogsPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useAppContext } from '../context/AppContext';\nimport './LogsPage.css';\n\nfunction LogsPage() {\n  const { tasks, isLoadingTasks, taskError, fetchTasks } = useAppContext();\n  const [selectedTaskId, setSelectedTaskId] = useState(null);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [isLoadingDetails, setIsLoadingDetails] = useState(false);\n  const [detailsError, setDetailsError] = useState(null);\n  const [filterStatus, setFilterStatus] = useState('all');\n\n  // API base URL from environment or default\n  const API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:8000';\n\n  // Fetch details for a specific task\n  const fetchTaskDetails = async (taskId) => {\n    if (!taskId) return;\n    \n    setIsLoadingDetails(true);\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/v1/tasks/${taskId}`);\n      if (!response.ok) {\n        throw new Error(`Failed to fetch task details for ID: ${taskId}`);\n      }\n      const data = await response.json();\n      setSelectedTask(data);\n      setDetailsError(null);\n    } catch (err) {\n      setDetailsError(err.message);\n    } finally {\n      setIsLoadingDetails(false);\n    }\n  };\n\n  // Auto-select the newest task when tasks are loaded or changed\n  useEffect(() => {\n    if (tasks.length > 0 && !selectedTaskId) {\n      setSelectedTaskId(tasks[0].id);\n    }\n  }, [tasks, selectedTaskId]);\n\n  // Fetch details when a task is selected\n  useEffect(() => {\n    if (selectedTaskId) {\n      fetchTaskDetails(selectedTaskId);\n      \n      // Set up polling for in-progress tasks\n      const pollInterval = setInterval(() => {\n        if (selectedTask && selectedTask.status?.toLowerCase() !== 'completed' && selectedTask.status?.toLowerCase() !== 'failed') {\n          fetchTaskDetails(selectedTaskId);\n        }\n      }, 5000);\n      \n      return () => clearInterval(pollInterval);\n    }\n  }, [selectedTaskId, selectedTask?.status]);\n\n  const handleTaskSelect = (taskId) => {\n    setSelectedTaskId(taskId);\n  };\n\n  const formatTimestamp = (timestamp) => {\n    if (!timestamp) return 'N/A';\n    if (timestamp instanceof Date) {\n      return timestamp.toLocaleString();\n    }\n    return new Date(timestamp).toLocaleString();\n  };\n\n  const getStatusBadge = (status) => {\n    const statusLower = status?.toLowerCase() || 'pending';\n    let badgeColor = '#e9ecef'; // Default gray\n    let textColor = '#6c757d';\n    \n    switch (statusLower) {\n      case 'running':\n        badgeColor = '#cfe2ff';\n        textColor = '#0a58ca';\n        break;\n      case 'completed':\n        badgeColor = '#d1e7dd';\n        textColor = '#146c43';\n        break;\n      case 'failed':\n        badgeColor = '#f8d7da';\n        textColor = '#dc3545';\n        break;\n      default:\n        break;\n    }\n    \n    return (\n      <span style={{\n        display: 'inline-block',\n        padding: '0.2rem 0.5rem',\n        borderRadius: '4px',\n        fontSize: '0.75rem',\n        fontWeight: '500',\n        backgroundColor: badgeColor,\n        color: textColor,\n        textAlign: 'center',\n        minWidth: '80px',\n        whiteSpace: 'nowrap'\n      }}>\n        {statusLower === 'running' ? 'Running' : \n          statusLower === 'completed' ? 'Completed' : \n          statusLower === 'failed' ? 'Failed' : 'Pending'}\n      </span>\n    );\n  };\n\n  // Filter tasks based on selected status\n  const filteredTasks = tasks.filter(task => {\n    if (filterStatus === 'all') return true;\n    return task.status?.toLowerCase() === filterStatus;\n  });\n\n  return (\n    <div style={{ \n      height: '100%',\n      display: 'flex',\n      flexDirection: 'column' \n    }}>\n      <div style={{\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        marginBottom: '16px'\n      }}>\n        <h2 style={{ margin: 0, fontSize: '1.25rem', fontWeight: '600' }}>Task Logs</h2>\n        \n        <div style={{ display: 'flex', gap: '8px' }}>\n          <button\n            onClick={() => setFilterStatus('all')}\n            style={{\n              backgroundColor: filterStatus === 'all' ? '#ffedf2' : 'transparent',\n              border: '1px solid #ffd6df',\n              color: filterStatus === 'all' ? '#ffb6c1' : '#333',\n              padding: '4px 10px',\n              borderRadius: '4px',\n              cursor: 'pointer',\n              fontSize: '0.8rem',\n              fontWeight: filterStatus === 'all' ? '600' : '400',\n              marginRight: '4px'\n            }}\n          >\n            All\n          </button>\n          <button\n            onClick={() => setFilterStatus('pending')}\n            style={{\n              backgroundColor: filterStatus === 'pending' ? '#ffedf2' : 'transparent',\n              border: '1px solid #ffd6df',\n              color: filterStatus === 'pending' ? '#ffb6c1' : '#333',\n              padding: '4px 10px',\n              borderRadius: '4px',\n              cursor: 'pointer',\n              fontSize: '0.8rem',\n              fontWeight: filterStatus === 'pending' ? '600' : '400',\n              marginRight: '4px'\n            }}\n          >\n            Pending\n          </button>\n          <button\n            onClick={() => setFilterStatus('running')}\n            style={{\n              backgroundColor: filterStatus === 'running' ? '#ffedf2' : 'transparent',\n              border: '1px solid #ffd6df',\n              color: filterStatus === 'running' ? '#ffb6c1' : '#333',\n              padding: '4px 10px',\n              borderRadius: '4px',\n              cursor: 'pointer',\n              fontSize: '0.8rem',\n              fontWeight: filterStatus === 'running' ? '600' : '400',\n              marginRight: '4px'\n            }}\n          >\n            Running\n          </button>\n          <button\n            onClick={() => setFilterStatus('completed')}\n            style={{\n              backgroundColor: filterStatus === 'completed' ? '#ffedf2' : 'transparent',\n              border: '1px solid #ffd6df',\n              color: filterStatus === 'completed' ? '#ffb6c1' : '#333',\n              padding: '4px 10px',\n              borderRadius: '4px',\n              cursor: 'pointer',\n              fontSize: '0.8rem',\n              fontWeight: filterStatus === 'completed' ? '600' : '400'\n            }}\n          >\n            Completed\n          </button>\n          <button\n            onClick={() => setFilterStatus('failed')}\n            style={{\n              backgroundColor: filterStatus === 'failed' ? '#ffedf2' : 'transparent',\n              border: '1px solid #ffd6df',\n              color: filterStatus === 'failed' ? '#ffb6c1' : '#333',\n              padding: '4px 10px',\n              borderRadius: '4px',\n              cursor: 'pointer',\n              fontSize: '0.8rem', \n              fontWeight: filterStatus === 'failed' ? '600' : '400'\n            }}\n          >\n            Failed\n          </button>\n          <button\n            onClick={fetchTasks}\n            style={{\n              backgroundColor: 'transparent',\n              border: '1px solid #ffd6df',\n              color: '#333',\n              padding: '4px 10px',\n              borderRadius: '4px',\n              cursor: 'pointer',\n              fontSize: '0.8rem',\n              marginLeft: '8px'\n            }}\n          >\n            {isLoadingTasks ? 'Refreshing...' : 'â†» Refresh'}\n          </button>\n        </div>\n      </div>\n      \n      <div style={{\n        display: 'grid',\n        gridTemplateColumns: '350px 1fr',\n        gap: '16px',\n        flex: '1',\n        overflow: 'hidden'\n      }}>\n        {/* Task List */}\n        <div style={{\n          backgroundColor: 'white',\n          borderRadius: '8px',\n          border: '1px solid #e9ecef',\n          padding: '16px',\n          display: 'flex',\n          flexDirection: 'column',\n          height: '100%',\n          overflow: 'hidden'\n        }}>\n          <div style={{\n            display: 'flex',\n            justifyContent: 'space-between',\n            borderBottom: '1px solid #e9ecef',\n            paddingBottom: '12px',\n            marginBottom: '12px'\n          }}>\n            <h3 style={{ \n              margin: 0, \n              fontSize: '0.9rem', \n              fontWeight: '600' \n            }}>\n              Recent Tasks\n            </h3>\n            <span style={{ \n              fontSize: '0.8rem', \n              color: '#6c757d',\n              marginTop: '2px'\n            }}>\n              {filteredTasks.length} {filteredTasks.length === 1 ? 'task' : 'tasks'}\n            </span>\n          </div>\n          \n          {isLoadingTasks && tasks.length === 0 ? (\n            <div style={{ \n              padding: '20px',\n              textAlign: 'center',\n              color: '#6c757d'\n            }}>\n              Loading tasks...\n            </div>\n          ) : filteredTasks.length === 0 ? (\n            <div style={{ \n              padding: '20px',\n              textAlign: 'center',\n              color: '#6c757d'\n            }}>\n              No {filterStatus !== 'all' ? filterStatus : ''} tasks found\n            </div>\n          ) : (\n            <div style={{ \n              overflow: 'auto',\n              flex: '1'\n            }}>\n              {filteredTasks.map((task) => (\n                <div \n                  key={task.id} \n                  onClick={() => handleTaskSelect(task.id)}\n                  style={{\n                    padding: '12px',\n                    marginBottom: '6px',\n                    borderRadius: '6px',\n                    backgroundColor: selectedTaskId === task.id ? '#f0ebfa' : 'white',\n                    cursor: 'pointer',\n                    borderLeft: selectedTaskId === task.id ? '3px solid #8359d4' : '3px solid transparent',\n                    transition: 'background-color 0.15s ease',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    gap: '8px'\n                  }}\n                >\n                  <div style={{\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    alignItems: 'center'\n                  }}>\n                    {getStatusBadge(task.status)}\n                    <span style={{ \n                      fontSize: '0.75rem',\n                      color: '#6c757d' \n                    }}>\n                      {formatTimestamp(task.startTime || task.start_time).split(' ')[1]}\n                    </span>\n                  </div>\n                  <div style={{\n                    fontWeight: '500',\n                    fontSize: '0.85rem',\n                    color: '#343a40',\n                    whiteSpace: 'nowrap',\n                    overflow: 'hidden',\n                    textOverflow: 'ellipsis'\n                  }}>\n                    {task.task_type || task.description || 'Task'}\n                  </div>\n                  <div style={{\n                    fontSize: '0.75rem',\n                    color: '#6c757d'\n                  }}>\n                    ID: {task.id.substring(0, 8)}...\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n        \n        {/* Task Details */}\n        <div style={{\n          backgroundColor: 'white',\n          borderRadius: '8px',\n          border: '1px solid #e9ecef',\n          padding: '16px',\n          display: 'flex',\n          flexDirection: 'column',\n          height: '100%',\n          overflow: 'hidden'\n        }}>\n          <div style={{\n            borderBottom: '1px solid #e9ecef',\n            paddingBottom: '12px',\n            marginBottom: '12px'\n          }}>\n            <h3 style={{ \n              margin: 0, \n              fontSize: '0.9rem', \n              fontWeight: '600' \n            }}>\n              Task Details\n            </h3>\n          </div>\n          \n          {taskError && (\n            <div style={{\n              backgroundColor: '#f8d7da',\n              color: '#721c24',\n              padding: '8px 12px',\n              marginBottom: '16px',\n              borderRadius: '4px',\n              fontSize: '0.85rem',\n              border: '1px solid #f5c6cb'\n            }}>\n              {taskError}\n            </div>\n          )}\n          \n          {detailsError && (\n            <div style={{\n              backgroundColor: '#f8d7da',\n              color: '#721c24',\n              padding: '8px 12px',\n              marginBottom: '16px',\n              borderRadius: '4px',\n              fontSize: '0.85rem',\n              border: '1px solid #f5c6cb'\n            }}>\n              {detailsError}\n            </div>\n          )}\n          \n          {isLoadingDetails && (\n            <div style={{ \n              padding: '40px 0',\n              textAlign: 'center',\n              color: '#6c757d',\n              flex: '1',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center'\n            }}>\n              Loading details...\n            </div>\n          )}\n          \n          {!isLoadingDetails && selectedTask && (\n            <div style={{\n              display: 'flex',\n              flexDirection: 'column',\n              height: '100%'\n            }}>\n              <div style={{\n                backgroundColor: '#f8f9fa',\n                borderRadius: '6px',\n                padding: '12px',\n                marginBottom: '16px'\n              }}>\n                <div style={{\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  alignItems: 'center',\n                  marginBottom: '12px'\n                }}>\n                  <div style={{\n                    fontFamily: 'monospace',\n                    fontSize: '0.8rem',\n                    color: '#6c757d'\n                  }}>\n                    ID: {selectedTask.id || selectedTask.task_id}\n                  </div>\n                  {getStatusBadge(selectedTask.status)}\n                </div>\n                \n                <div style={{\n                  display: 'grid',\n                  gridTemplateColumns: 'auto 1fr',\n                  gap: '8px 24px',\n                  fontSize: '0.85rem'\n                }}>\n                  <div style={{ fontWeight: '600', color: '#495057' }}>Type:</div>\n                  <div>{selectedTask.task_type || selectedTask.description || 'Task'}</div>\n                  \n                  <div style={{ fontWeight: '600', color: '#495057' }}>Started:</div>\n                  <div>{formatTimestamp(selectedTask.start_time)}</div>\n                  \n                  {selectedTask.end_time && (\n                    <>\n                      <div style={{ fontWeight: '600', color: '#495057' }}>Completed:</div>\n                      <div>{formatTimestamp(selectedTask.end_time)}</div>\n                    </>\n                  )}\n                  \n                  {selectedTask.description && (\n                    <>\n                      <div style={{ fontWeight: '600', color: '#495057' }}>Description:</div>\n                      <div>{selectedTask.description}</div>\n                    </>\n                  )}\n                </div>\n              </div>\n              \n              <div style={{\n                display: 'flex',\n                flexDirection: 'column',\n                flex: '1',\n                overflow: 'hidden'\n              }}>\n                <div style={{\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  alignItems: 'center',\n                  marginBottom: '8px'\n                }}>\n                  <h4 style={{ \n                    margin: 0, \n                    fontSize: '0.9rem', \n                    fontWeight: '600' \n                  }}>\n                    Logs\n                  </h4>\n                  {selectedTask.logs && (\n                    <span style={{ \n                      fontSize: '0.8rem', \n                      color: '#6c757d' \n                    }}>\n                      {selectedTask.logs.length} entries\n                    </span>\n                  )}\n                </div>\n                \n                <div style={{\n                  backgroundColor: '#f1f3f5',\n                  borderRadius: '6px',\n                  padding: '12px',\n                  fontFamily: 'monospace',\n                  fontSize: '0.85rem',\n                  flex: '1',\n                  overflow: 'auto',\n                  border: '1px solid #e9ecef'\n                }}>\n                  {selectedTask.logs && selectedTask.logs.length > 0 ? (\n                    selectedTask.logs.map((log, index) => (\n                      <div \n                        key={index}\n                        style={{\n                          marginBottom: '4px',\n                          lineHeight: '1.4',\n                          display: 'flex',\n                          alignItems: 'baseline',\n                          gap: '8px'\n                        }}\n                      >\n                        <span style={{\n                          color: '#6c757d',\n                          fontSize: '0.75rem',\n                          whiteSpace: 'nowrap'\n                        }}>\n                          {formatTimestamp(log.timestamp).split(' ')[1]}\n                        </span>\n                        <span style={{\n                          color: log.level === 'error' ? '#dc3545' : \n                                 log.level === 'warning' ? '#fd7e14' : \n                                 log.level === 'debug' ? '#6c757d' : '#212529'\n                        }}>\n                          {log.message}\n                        </span>\n                </div>\n                    ))\n                  ) : (\n                    <div style={{ \n                      color: '#6c757d',\n                      fontStyle: 'italic',\n                      textAlign: 'center',\n                      padding: '20px 0'\n                    }}>\n                      No logs available\n                  </div>\n                )}\n              </div>\n              </div>\n            </div>\n          )}\n          \n          {!isLoadingDetails && !selectedTask && !detailsError && (\n            <div style={{ \n              padding: '40px 0',\n              textAlign: 'center',\n              color: '#6c757d',\n              flex: '1',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center'\n            }}>\n              Select a task to view details\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default LogsPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}