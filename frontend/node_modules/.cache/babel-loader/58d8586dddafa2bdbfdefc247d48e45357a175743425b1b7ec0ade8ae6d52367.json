{"ast":null,"code":"import React,{useState}from'react';import{useAppContext}from'../context/AppContext';import'./UsageStats.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function UsageStats(){const[activeTab,setActiveTab]=useState('standard');const{tasks,wallets,selectedWallets,isLoadingTasks}=useAppContext();// Calculate stats\nconst activeTasks=tasks.filter(task=>['pending','running'].includes(task.status));const completedTasks=tasks.filter(task=>task.status==='completed');// Calculate transaction totals - in a real app this would come from the backend\nconst maxTransactions=1000;const usedTransactions=completedTasks.length*2;// Assuming 2 txs per completed task\nconst remainingTransactions=maxTransactions-usedTransactions;const txPercentage=usedTransactions/maxTransactions*100;// Calculate active workflows\nconst maxWorkflows=10;const activeWorkflowsCount=activeTasks.length;const workflowPercentage=activeWorkflowsCount/maxWorkflows*100;// Get the first selected wallet for display\nconst firstWallet=selectedWallets.length>0?selectedWallets[0].address:'';return/*#__PURE__*/_jsxs(\"div\",{className:\"usage-stats\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"usage-tabs\",children:[/*#__PURE__*/_jsx(\"button\",{className:`tab-btn ${activeTab==='standard'?'active':''}`,onClick:()=>setActiveTab('standard'),children:\"Standard\"}),/*#__PURE__*/_jsx(\"button\",{className:`tab-btn ${activeTab==='usage'?'active':''}`,onClick:()=>setActiveTab('usage'),children:\"Today usage\"})]}),isLoadingTasks&&/*#__PURE__*/_jsx(\"div\",{className:\"loading-indicator\",children:\"Loading stats...\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"stats-cards\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stat-title\",children:\"Remaining Transactions Build\"}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-subtitle\",children:\"Sum from all wallets\"}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-number\",children:remainingTransactions}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-details\",children:[\"/\",maxTransactions,\" txs\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-progress\",children:/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar\",style:{width:`${txPercentage}%`}})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stat-title\",children:\"Active Workflows\"}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-subtitle\",children:firstWallet||'No wallet selected'}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-number\",children:activeWorkflowsCount}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-details\",children:[\"/\",maxWorkflows]}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-progress\",children:/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar\",style:{width:`${workflowPercentage}%`}})})]})]})]});}export default UsageStats;","map":{"version":3,"names":["React","useState","useAppContext","jsx","_jsx","jsxs","_jsxs","UsageStats","activeTab","setActiveTab","tasks","wallets","selectedWallets","isLoadingTasks","activeTasks","filter","task","includes","status","completedTasks","maxTransactions","usedTransactions","length","remainingTransactions","txPercentage","maxWorkflows","activeWorkflowsCount","workflowPercentage","firstWallet","address","className","children","onClick","style","width"],"sources":["C:/Users/cymst/Documents/monad bot/frontend/src/components/UsageStats.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useAppContext } from '../context/AppContext';\r\nimport './UsageStats.css';\r\n\r\nfunction UsageStats() {\r\n  const [activeTab, setActiveTab] = useState('standard');\r\n  const { tasks, wallets, selectedWallets, isLoadingTasks } = useAppContext();\r\n  \r\n  // Calculate stats\r\n  const activeTasks = tasks.filter(task => ['pending', 'running'].includes(task.status));\r\n  const completedTasks = tasks.filter(task => task.status === 'completed');\r\n  \r\n  // Calculate transaction totals - in a real app this would come from the backend\r\n  const maxTransactions = 1000;\r\n  const usedTransactions = completedTasks.length * 2; // Assuming 2 txs per completed task\r\n  const remainingTransactions = maxTransactions - usedTransactions;\r\n  const txPercentage = (usedTransactions / maxTransactions) * 100;\r\n  \r\n  // Calculate active workflows\r\n  const maxWorkflows = 10;\r\n  const activeWorkflowsCount = activeTasks.length;\r\n  const workflowPercentage = (activeWorkflowsCount / maxWorkflows) * 100;\r\n  \r\n  // Get the first selected wallet for display\r\n  const firstWallet = selectedWallets.length > 0 ? selectedWallets[0].address : '';\r\n  \r\n  return (\r\n    <div className=\"usage-stats\">\r\n      <div className=\"usage-tabs\">\r\n        <button \r\n          className={`tab-btn ${activeTab === 'standard' ? 'active' : ''}`}\r\n          onClick={() => setActiveTab('standard')}\r\n        >\r\n          Standard\r\n        </button>\r\n        <button \r\n          className={`tab-btn ${activeTab === 'usage' ? 'active' : ''}`}\r\n          onClick={() => setActiveTab('usage')}\r\n        >\r\n          Today usage\r\n        </button>\r\n      </div>\r\n      \r\n      {isLoadingTasks && <div className=\"loading-indicator\">Loading stats...</div>}\r\n      \r\n      <div className=\"stats-cards\">\r\n        <div className=\"stat-card\">\r\n          <div className=\"stat-title\">Remaining Transactions Build</div>\r\n          <div className=\"stat-subtitle\">Sum from all wallets</div>\r\n          <div className=\"stat-number\">{remainingTransactions}</div>\r\n          <div className=\"stat-details\">/{maxTransactions} txs</div>\r\n          <div className=\"stat-progress\">\r\n            <div className=\"progress-bar\" style={{ width: `${txPercentage}%` }}></div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"stat-card\">\r\n          <div className=\"stat-title\">Active Workflows</div>\r\n          <div className=\"stat-subtitle\">{firstWallet || 'No wallet selected'}</div>\r\n          <div className=\"stat-number\">{activeWorkflowsCount}</div>\r\n          <div className=\"stat-details\">/{maxWorkflows}</div>\r\n          <div className=\"stat-progress\">\r\n            <div className=\"progress-bar\" style={{ width: `${workflowPercentage}%` }}></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UsageStats; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}