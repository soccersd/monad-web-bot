{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cymst\\\\Documents\\\\monad bot\\\\frontend\\\\src\\\\components\\\\WorkflowDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useAppContext } from '../context/AppContext';\nimport './WorkflowDetail.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction WorkflowDetail() {\n  _s();\n  var _activeTask$status, _activeTask$status2, _activeTask$status3, _latestRun$status;\n  const {\n    selectedWorkflow,\n    runWorkflow,\n    tasks,\n    fetchTasks\n  } = useAppContext();\n  const [skipOnError, setSkipOnError] = useState(true);\n  const [isRunning, setIsRunning] = useState(false);\n  const [runResult, setRunResult] = useState(null);\n  const [isStopping, setIsStopping] = useState(false);\n  const [stopResult, setStopResult] = useState(null);\n  const [activeTaskId, setActiveTaskId] = useState(null);\n\n  // Steps definition based on workflow type\n  const getWorkflowSteps = () => {\n    if (!selectedWorkflow) return [];\n    switch (selectedWorkflow.type) {\n      case 'stake':\n        return [{\n          id: 1,\n          title: 'Logging \"Stake/Unstake starting...\"',\n          expanded: false\n        }, {\n          id: 2,\n          title: `Stake using ${selectedWorkflow.contractType} contract`,\n          expanded: false\n        }, {\n          id: 3,\n          title: 'Wait delay period',\n          expanded: false\n        }, {\n          id: 4,\n          title: `Unstake from ${selectedWorkflow.contractType} contract`,\n          expanded: false\n        }];\n      case 'deploy':\n        return [{\n          id: 1,\n          title: 'Logging \"NFT Minter starting...\"',\n          expanded: false\n        }, {\n          id: 2,\n          title: 'Random sleep between 0 and 120 seconds',\n          expanded: false\n        }, {\n          id: 3,\n          title: 'Deploy counter contract to network',\n          expanded: false\n        }];\n      case 'swap':\n        return [{\n          id: 1,\n          title: 'Logging \"Swap starting...\"',\n          expanded: false\n        }, {\n          id: 2,\n          title: `Swap ${selectedWorkflow.fromToken} to ${selectedWorkflow.toToken}`,\n          expanded: false\n        }, {\n          id: 3,\n          title: 'Verify swap success',\n          expanded: false\n        }];\n      case 'send':\n        return [{\n          id: 1,\n          title: 'Logging \"Token send starting...\"',\n          expanded: false\n        }, {\n          id: 2,\n          title: `Generate ${selectedWorkflow.mode === 'random' ? 'random' : 'specific'} recipient`,\n          expanded: false\n        }, {\n          id: 3,\n          title: 'Send tokens to recipient',\n          expanded: false\n        }];\n      default:\n        return [{\n          id: 1,\n          title: 'Default step 1',\n          expanded: false\n        }, {\n          id: 2,\n          title: 'Default step 2',\n          expanded: false\n        }];\n    }\n  };\n  const [workflowSteps, setWorkflowSteps] = useState(getWorkflowSteps());\n\n  // Update steps when selected workflow changes\n  React.useEffect(() => {\n    setWorkflowSteps(getWorkflowSteps());\n    setRunResult(null);\n    setStopResult(null);\n    setIsRunning(false);\n    setIsStopping(false);\n    setActiveTaskId(null);\n  }, [selectedWorkflow]);\n\n  // NEW: Effect to clear activeTaskId if the task is no longer stoppable\n  useEffect(() => {\n    if (activeTaskId && tasks !== null && tasks !== void 0 && tasks.find(task => task.task_id === activeTaskId)) {\n      var _tasks$find$status;\n      // If the active task is found but no longer in a stoppable state, clear the activeTaskId\n      if (!['running', 'pending', 'stopping'].includes((_tasks$find$status = tasks.find(task => task.task_id === activeTaskId).status) === null || _tasks$find$status === void 0 ? void 0 : _tasks$find$status.toLowerCase())) {\n        setActiveTaskId(null);\n      }\n    } else if (activeTaskId && !(tasks !== null && tasks !== void 0 && tasks.find(task => task.task_id === activeTaskId))) {\n      // If activeTaskId is set but the task is not found in the list (e.g., after refresh), clear it\n      // This might happen if tasks list updates and the task is gone\n      setActiveTaskId(null);\n    }\n  }, [tasks, activeTaskId]); // Rerun when tasks or activeTaskId changes\n\n  const toggleStepExpand = id => {\n    setWorkflowSteps(workflowSteps.map(step => step.id === id ? {\n      ...step,\n      expanded: !step.expanded\n    } : step));\n  };\n\n  // Handle run workflow button click\n  const handleRunWorkflow = async () => {\n    setIsRunning(true);\n    setRunResult(null);\n    setStopResult(null);\n    setActiveTaskId(null);\n    try {\n      var _result$data;\n      const result = await runWorkflow();\n      setRunResult(result);\n      if (result.success && (_result$data = result.data) !== null && _result$data !== void 0 && _result$data.task_id) {\n        console.log(\"Workflow started with task ID:\", result.data.task_id);\n        setActiveTaskId(result.data.task_id);\n        if (fetchTasks) fetchTasks();\n      } else {\n        setActiveTaskId(null);\n      }\n    } catch (error) {\n      setActiveTaskId(null);\n      setRunResult({\n        success: false,\n        message: `Error running workflow: ${error.message}`\n      });\n    } finally {\n      setIsRunning(false);\n    }\n  };\n\n  // Handle Stop Task Button Click\n  const handleStopTask = async taskId => {\n    if (!taskId) return;\n    setIsStopping(true);\n    setStopResult(null);\n    console.log(\"Requesting stop for task:\", taskId);\n    try {\n      const response = await fetch(`/api/v1/stop-task/${taskId}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.detail || 'Failed to send stop request');\n      }\n      setStopResult({\n        success: true,\n        message: data.message || 'Stop request sent successfully.'\n      });\n      setTimeout(() => {\n        if (fetchTasks) fetchTasks();\n      }, 1500);\n    } catch (error) {\n      console.error(\"Error stopping task:\", error);\n      setStopResult({\n        success: false,\n        message: `Error: ${error.message}`\n      });\n    } finally {\n      setIsStopping(false);\n    }\n  };\n\n  // Get the latest run for this workflow if any (very basic matching by name - would be better with IDs)\n  const getLatestRun = () => {\n    if (!selectedWorkflow || !tasks || tasks.length === 0) return null;\n    const relatedTasks = tasks.filter(task => task.description && task.description.includes(selectedWorkflow.name));\n    if (relatedTasks.length === 0) return null;\n    relatedTasks.sort((a, b) => new Date(b.start_time) - new Date(a.start_time));\n    return relatedTasks[0];\n  };\n  const latestRun = getLatestRun();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"workflow-detail\",\n    children: selectedWorkflow ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"workflow-title-bar\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: selectedWorkflow.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"workflow-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropdown\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"run-mode-btn\",\n              disabled: isRunning,\n              children: [\"Run Mode \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"\\u25BC\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 28\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"schedule-btn\",\n            disabled: isRunning || activeTaskId && (tasks === null || tasks === void 0 ? void 0 : tasks.find(task => task.task_id === activeTaskId)),\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uD83D\\uDDD3\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 17\n            }, this), \" Schedule\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this), isTaskStoppable ? /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"run-now-btn stop-active\",\n            onClick: () => handleStopTask(activeTaskId),\n            disabled: isStopping || ((_activeTask$status = activeTask.status) === null || _activeTask$status === void 0 ? void 0 : _activeTask$status.toLowerCase()) === 'stopping',\n            title: ((_activeTask$status2 = activeTask.status) === null || _activeTask$status2 === void 0 ? void 0 : _activeTask$status2.toLowerCase()) === 'stopping' ? 'Stop already requested' : 'Request task stop',\n            children: isStopping ? 'Stopping...' : ((_activeTask$status3 = activeTask.status) === null || _activeTask$status3 === void 0 ? void 0 : _activeTask$status3.toLowerCase()) === 'stopping' ? 'Stopping Req...' : 'Stop'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"run-now-btn\",\n            onClick: handleRunWorkflow,\n            disabled: isRunning,\n            children: isRunning ? 'Starting...' : 'Run now'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this), runResult && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `run-result ${runResult.success ? 'success' : 'error'}`,\n        children: [runResult.message, runResult.success && runResult.data && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-id\",\n          children: [\"Task ID: \", runResult.data.task_id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 13\n      }, this), stopResult && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `run-result ${stopResult.success ? 'success' : 'error'}`,\n        children: stopResult.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 13\n      }, this), latestRun && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"latest-run-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"latest-run-title\",\n          children: \"Latest Run:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"latest-run-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: `status status-${(_latestRun$status = latestRun.status) === null || _latestRun$status === void 0 ? void 0 : _latestRun$status.toLowerCase()}`,\n            children: latestRun.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"latest-run-time\",\n            children: new Date(latestRun.start_time).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"workflow-schedule\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"schedule-info\",\n          children: [\"Execute at 19:22 - 20:22 \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"repeat-icon\",\n            children: \"\\uD83D\\uDD04\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 40\n          }, this), \" every day\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"info-icon\",\n            title: \"Schedule information\",\n            children: \"\\u24D8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-handling\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: \"skip-on-error\",\n            checked: skipOnError,\n            onChange: () => setSkipOnError(!skipOnError)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"skip-on-error\",\n            children: \"Skip on Error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"workflow-steps\",\n        children: [workflowSteps.map((step, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"workflow-step\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"step-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"step-number\",\n              children: [\"#\", index + 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"step-title\",\n              children: step.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"step-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"step-action edit-step\",\n                title: \"Edit step\",\n                children: \"\\u270F\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"step-action delete-step\",\n                title: \"Delete step\",\n                children: \"\\uD83D\\uDDD1\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"step-action expand-step\",\n                onClick: () => toggleStepExpand(step.id),\n                children: step.expanded ? '▲' : '▼'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 17\n          }, this), step.expanded && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"step-details\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"step-config\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Configuration for \", step.title]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"config-form\",\n                children: [step.id === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Log Message:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 270,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    defaultValue: `Starting ${selectedWorkflow.name}...`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 271,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 27\n                }, this), selectedWorkflow.type === 'stake' && step.id === 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Amount to Stake:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 277,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    defaultValue: \"0.01\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 278,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"input-suffix\",\n                    children: \"MON\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 279,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 27\n                }, this), selectedWorkflow.type === 'swap' && step.id === 2 && /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"From Token:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 286,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      defaultValue: selectedWorkflow.fromToken || 'ETH'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 287,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 285,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"To Token:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 290,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      defaultValue: selectedWorkflow.toToken || 'USDC'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 291,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 289,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Amount:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 294,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      defaultValue: \"0.001\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 295,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 293,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 19\n          }, this)]\n        }, step.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-step\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"add-step-btn\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 17\n            }, this), \" Add new task\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"workflow-footer\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delete-workflow-btn\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uD83D\\uDDD1\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 15\n          }, this), \" Delete\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-workflow-selected\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No workflow selected. Please select a workflow from the list.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n}\n_s(WorkflowDetail, \"dYYM9qVPcShAeoQ+EYyUwMG4m5w=\", false, function () {\n  return [useAppContext];\n});\n_c = WorkflowDetail;\nexport default WorkflowDetail;\nvar _c;\n$RefreshReg$(_c, \"WorkflowDetail\");","map":{"version":3,"names":["React","useState","useEffect","useAppContext","jsxDEV","_jsxDEV","Fragment","_Fragment","WorkflowDetail","_s","_activeTask$status","_activeTask$status2","_activeTask$status3","_latestRun$status","selectedWorkflow","runWorkflow","tasks","fetchTasks","skipOnError","setSkipOnError","isRunning","setIsRunning","runResult","setRunResult","isStopping","setIsStopping","stopResult","setStopResult","activeTaskId","setActiveTaskId","getWorkflowSteps","type","id","title","expanded","contractType","fromToken","toToken","mode","workflowSteps","setWorkflowSteps","find","task","task_id","_tasks$find$status","includes","status","toLowerCase","toggleStepExpand","map","step","handleRunWorkflow","_result$data","result","success","data","console","log","error","message","handleStopTask","taskId","response","fetch","method","headers","json","ok","Error","detail","setTimeout","getLatestRun","length","relatedTasks","filter","description","name","sort","a","b","Date","start_time","latestRun","className","children","fileName","_jsxFileName","lineNumber","columnNumber","disabled","isTaskStoppable","onClick","activeTask","toLocaleString","checked","onChange","htmlFor","index","defaultValue","_c","$RefreshReg$"],"sources":["C:/Users/cymst/Documents/monad bot/frontend/src/components/WorkflowDetail.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useAppContext } from '../context/AppContext';\nimport './WorkflowDetail.css';\n\nfunction WorkflowDetail() {\n  const { selectedWorkflow, runWorkflow, tasks, fetchTasks } = useAppContext();\n  const [skipOnError, setSkipOnError] = useState(true);\n  const [isRunning, setIsRunning] = useState(false);\n  const [runResult, setRunResult] = useState(null);\n  const [isStopping, setIsStopping] = useState(false);\n  const [stopResult, setStopResult] = useState(null);\n  const [activeTaskId, setActiveTaskId] = useState(null);\n  \n  // Steps definition based on workflow type\n  const getWorkflowSteps = () => {\n    if (!selectedWorkflow) return [];\n    \n    switch (selectedWorkflow.type) {\n      case 'stake':\n        return [\n          { id: 1, title: 'Logging \"Stake/Unstake starting...\"', expanded: false },\n          { id: 2, title: `Stake using ${selectedWorkflow.contractType} contract`, expanded: false },\n          { id: 3, title: 'Wait delay period', expanded: false },\n          { id: 4, title: `Unstake from ${selectedWorkflow.contractType} contract`, expanded: false }\n        ];\n      case 'deploy':\n        return [\n          { id: 1, title: 'Logging \"NFT Minter starting...\"', expanded: false },\n          { id: 2, title: 'Random sleep between 0 and 120 seconds', expanded: false },\n          { id: 3, title: 'Deploy counter contract to network', expanded: false }\n        ];\n      case 'swap':\n        return [\n          { id: 1, title: 'Logging \"Swap starting...\"', expanded: false },\n          { id: 2, title: `Swap ${selectedWorkflow.fromToken} to ${selectedWorkflow.toToken}`, expanded: false },\n          { id: 3, title: 'Verify swap success', expanded: false }\n        ];\n      case 'send':\n        return [\n          { id: 1, title: 'Logging \"Token send starting...\"', expanded: false },\n          { id: 2, title: `Generate ${selectedWorkflow.mode === 'random' ? 'random' : 'specific'} recipient`, expanded: false },\n          { id: 3, title: 'Send tokens to recipient', expanded: false }\n        ];\n      default:\n        return [\n          { id: 1, title: 'Default step 1', expanded: false },\n          { id: 2, title: 'Default step 2', expanded: false }\n        ];\n    }\n  };\n  \n  const [workflowSteps, setWorkflowSteps] = useState(getWorkflowSteps());\n  \n  // Update steps when selected workflow changes\n  React.useEffect(() => {\n    setWorkflowSteps(getWorkflowSteps());\n    setRunResult(null);\n    setStopResult(null);\n    setIsRunning(false);\n    setIsStopping(false);\n    setActiveTaskId(null);\n  }, [selectedWorkflow]);\n  \n  // NEW: Effect to clear activeTaskId if the task is no longer stoppable\n  useEffect(() => {\n    if (activeTaskId && tasks?.find(task => task.task_id === activeTaskId)) {\n      // If the active task is found but no longer in a stoppable state, clear the activeTaskId\n      if (!['running', 'pending', 'stopping'].includes(tasks.find(task => task.task_id === activeTaskId).status?.toLowerCase())) {\n        setActiveTaskId(null);\n      }\n    } else if (activeTaskId && !tasks?.find(task => task.task_id === activeTaskId)) {\n        // If activeTaskId is set but the task is not found in the list (e.g., after refresh), clear it\n        // This might happen if tasks list updates and the task is gone\n        setActiveTaskId(null); \n    }\n  }, [tasks, activeTaskId]); // Rerun when tasks or activeTaskId changes\n  \n  const toggleStepExpand = (id) => {\n    setWorkflowSteps(workflowSteps.map(step => \n      step.id === id ? { ...step, expanded: !step.expanded } : step\n    ));\n  };\n  \n  // Handle run workflow button click\n  const handleRunWorkflow = async () => {\n    setIsRunning(true);\n    setRunResult(null);\n    setStopResult(null);\n    setActiveTaskId(null);\n    \n    try {\n      const result = await runWorkflow();\n      setRunResult(result);\n      \n      if (result.success && result.data?.task_id) {\n        console.log(\"Workflow started with task ID:\", result.data.task_id);\n        setActiveTaskId(result.data.task_id);\n        if (fetchTasks) fetchTasks();\n      } else {\n        setActiveTaskId(null);\n      }\n    } catch (error) {\n      setActiveTaskId(null);\n      setRunResult({ \n        success: false, \n        message: `Error running workflow: ${error.message}` \n      });\n    } finally {\n      setIsRunning(false);\n    }\n  };\n  \n  // Handle Stop Task Button Click\n  const handleStopTask = async (taskId) => {\n    if (!taskId) return;\n    setIsStopping(true);\n    setStopResult(null);\n    console.log(\"Requesting stop for task:\", taskId);\n\n    try {\n      const response = await fetch(`/api/v1/stop-task/${taskId}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.detail || 'Failed to send stop request');\n      }\n\n      setStopResult({ success: true, message: data.message || 'Stop request sent successfully.' });\n      setTimeout(() => {\n          if (fetchTasks) fetchTasks();\n      }, 1500);\n\n    } catch (error) {\n      console.error(\"Error stopping task:\", error);\n      setStopResult({ success: false, message: `Error: ${error.message}` });\n    } finally {\n      setIsStopping(false);\n    }\n  };\n  \n  // Get the latest run for this workflow if any (very basic matching by name - would be better with IDs)\n  const getLatestRun = () => {\n    if (!selectedWorkflow || !tasks || tasks.length === 0) return null;\n    \n    const relatedTasks = tasks.filter(task => \n      task.description && task.description.includes(selectedWorkflow.name)\n    );\n    \n    if (relatedTasks.length === 0) return null;\n\n    relatedTasks.sort((a, b) => new Date(b.start_time) - new Date(a.start_time));\n    \n    return relatedTasks[0];\n  };\n  \n  const latestRun = getLatestRun();\n  \n  return (\n    <div className=\"workflow-detail\">\n      {selectedWorkflow ? (\n        <>\n          <div className=\"workflow-title-bar\">\n            <h2>{selectedWorkflow.name}</h2>\n            \n            <div className=\"workflow-actions\">\n              <div className=\"dropdown\">\n                <button className=\"run-mode-btn\" disabled={isRunning}>\n                  Run Mode <span>▼</span>\n                </button>\n                {/* Dropdown menu would go here */}\n              </div>\n              <button className=\"schedule-btn\" disabled={isRunning || (activeTaskId && tasks?.find(task => task.task_id === activeTaskId))}>\n                <span>🗓️</span> Schedule\n              </button>\n              {isTaskStoppable ? (\n                <button \n                  className=\"run-now-btn stop-active\"\n                  onClick={() => handleStopTask(activeTaskId)}\n                  disabled={isStopping || activeTask.status?.toLowerCase() === 'stopping'}\n                  title={activeTask.status?.toLowerCase() === 'stopping' ? 'Stop already requested' : 'Request task stop'}\n                >\n                  {isStopping ? 'Stopping...' : (activeTask.status?.toLowerCase() === 'stopping' ? 'Stopping Req...' : 'Stop')}\n                </button>\n              ) : (\n                <button \n                  className=\"run-now-btn\" \n                  onClick={handleRunWorkflow} \n                  disabled={isRunning}\n                >\n                  {isRunning ? 'Starting...' : 'Run now'}\n                </button>\n              )}\n            </div>\n          </div>\n          \n          {runResult && (\n            <div className={`run-result ${runResult.success ? 'success' : 'error'}`}>\n              {runResult.message}\n              {runResult.success && runResult.data && (\n                <div className=\"task-id\">Task ID: {runResult.data.task_id}</div>\n              )}\n            </div>\n          )}\n          \n          {stopResult && (\n            <div className={`run-result ${stopResult.success ? 'success' : 'error'}`}>\n              {stopResult.message}\n            </div>\n          )}\n          \n          {latestRun && (\n            <div className=\"latest-run-info\">\n              <div className=\"latest-run-title\">Latest Run:</div>\n              <div className=\"latest-run-details\">\n                <span className={`status status-${latestRun.status?.toLowerCase()}`}>\n                  {latestRun.status}\n                </span>\n                <span className=\"latest-run-time\">\n                  {new Date(latestRun.start_time).toLocaleString()}\n                </span>\n              </div>\n            </div>\n          )}\n          \n          <div className=\"workflow-schedule\">\n            <div className=\"schedule-info\">\n              Execute at 19:22 - 20:22 <span className=\"repeat-icon\">🔄</span> every day\n              <span className=\"info-icon\" title=\"Schedule information\">ⓘ</span>\n            </div>\n            \n            <div className=\"error-handling\">\n              <input \n                type=\"checkbox\" \n                id=\"skip-on-error\" \n                checked={skipOnError}\n                onChange={() => setSkipOnError(!skipOnError)}\n              />\n              <label htmlFor=\"skip-on-error\">Skip on Error</label>\n            </div>\n          </div>\n          \n          <div className=\"workflow-steps\">\n            {workflowSteps.map((step, index) => (\n              <div className=\"workflow-step\" key={step.id}>\n                <div className=\"step-header\">\n                  <div className=\"step-number\">#{index + 1}</div>\n                  <div className=\"step-title\">{step.title}</div>\n                  <div className=\"step-actions\">\n                    <button className=\"step-action edit-step\" title=\"Edit step\">✏️</button>\n                    <button className=\"step-action delete-step\" title=\"Delete step\">🗑️</button>\n                    <button className=\"step-action expand-step\" onClick={() => toggleStepExpand(step.id)}>\n                      {step.expanded ? '▲' : '▼'}\n                    </button>\n                  </div>\n                </div>\n                \n                {step.expanded && (\n                  <div className=\"step-details\">\n                    <div className=\"step-config\">\n                      <p>Configuration for {step.title}</p>\n                      <div className=\"config-form\">\n                        {step.id === 1 && (\n                          <div className=\"form-group\">\n                            <label>Log Message:</label>\n                            <input type=\"text\" defaultValue={`Starting ${selectedWorkflow.name}...`} />\n                          </div>\n                        )}\n                        \n                        {selectedWorkflow.type === 'stake' && step.id === 2 && (\n                          <div className=\"form-group\">\n                            <label>Amount to Stake:</label>\n                            <input type=\"text\" defaultValue=\"0.01\" />\n                            <span className=\"input-suffix\">MON</span>\n                          </div>\n                        )}\n                        \n                        {selectedWorkflow.type === 'swap' && step.id === 2 && (\n                          <>\n                            <div className=\"form-group\">\n                              <label>From Token:</label>\n                              <input type=\"text\" defaultValue={selectedWorkflow.fromToken || 'ETH'} />\n                            </div>\n                            <div className=\"form-group\">\n                              <label>To Token:</label>\n                              <input type=\"text\" defaultValue={selectedWorkflow.toToken || 'USDC'} />\n                            </div>\n                            <div className=\"form-group\">\n                              <label>Amount:</label>\n                              <input type=\"text\" defaultValue=\"0.001\" />\n                            </div>\n                          </>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                )}\n              </div>\n            ))}\n            \n            <div className=\"add-step\">\n              <button className=\"add-step-btn\">\n                <span>+</span> Add new task\n              </button>\n            </div>\n          </div>\n          \n          <div className=\"workflow-footer\">\n            <button className=\"delete-workflow-btn\">\n              <span>🗑️</span> Delete\n            </button>\n          </div>\n        </>\n      ) : (\n        <div className=\"no-workflow-selected\">\n          <p>No workflow selected. Please select a workflow from the list.</p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default WorkflowDetail; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}