{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cymst\\\\Documents\\\\monad bot\\\\frontend\\\\src\\\\components\\\\WorkflowDetail.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useAppContext } from '../context/AppContext';\nimport './WorkflowDetail.css';\n\n// Component for editing a specific step's configuration\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction StepConfigEditor({\n  workflowId,\n  step,\n  onConfigChange,\n  onCancel\n}) {\n  _s();\n  const {\n    updateStepConfig\n  } = useAppContext();\n  const [localConfig, setLocalConfig] = useState({\n    ...step.config\n  }); // Initialize with current config\n\n  useEffect(() => {\n    // Reset local config if the step changes\n    setLocalConfig({\n      ...step.config\n    });\n  }, [step]);\n  const handleInputChange = event => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = event.target;\n    setLocalConfig(prevConfig => ({\n      ...prevConfig,\n      [name]: type === 'checkbox' ? checked : type === 'number' ? Number(value) || 0 : value // Handle different input types\n    }));\n  };\n  const handleSave = () => {\n    updateStepConfig(workflowId, step.step_id, localConfig);\n    onConfigChange(); // Notify parent that config was saved/updated\n  };\n\n  // Render form fields based on step type\n  const renderConfigFields = () => {\n    switch (step.type) {\n      case 'delay':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: `duration_${step.step_id}`,\n            children: \"Duration (seconds):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: `duration_${step.step_id}`,\n            name: \"duration_seconds\",\n            value: localConfig.duration_seconds || '',\n            onChange: handleInputChange,\n            min: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this);\n      case 'stake':\n        // Example for stake\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `contract_type_${step.step_id}`,\n              children: \"Contract Type:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: `contract_type_${step.step_id}`,\n              name: \"contract_type\",\n              value: localConfig.contract_type || 'kitsu',\n              onChange: handleInputChange,\n              children: /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"kitsu\",\n                children: \"Kitsu\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `amount_${step.step_id}`,\n              children: \"Amount:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\" // Use text for potential large numbers or decimals\n              ,\n              id: `amount_${step.step_id}`,\n              name: \"amount\",\n              value: localConfig.amount || '',\n              onChange: handleInputChange,\n              placeholder: \"e.g., 0.1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"input-suffix\",\n              children: \"MON\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 30\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true);\n      case 'swap':\n        // Example for swap\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `from_token_${step.step_id}`,\n              children: \"From Token:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 30\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: `from_token_${step.step_id}`,\n              name: \"from_token\",\n              value: localConfig.from_token || '',\n              onChange: handleInputChange,\n              placeholder: \"e.g., MON\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 30\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `to_token_${step.step_id}`,\n              children: \"To Token:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 30\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: `to_token_${step.step_id}`,\n              name: \"to_token\",\n              value: localConfig.to_token || '',\n              onChange: handleInputChange,\n              placeholder: \"e.g., USDC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 30\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `amount_swap_${step.step_id}`,\n              children: \"Amount:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 30\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: `amount_swap_${step.step_id}`,\n              name: \"amount\",\n              value: localConfig.amount || '',\n              onChange: handleInputChange,\n              placeholder: \"e.g., 100\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 30\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true);\n      // Add cases for other step types (deploy, send, etc.)\n      default:\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"No configuration available for step type: \", step.type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 24\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"step-config-editor\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Configure Step: \", step.type]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"config-form\",\n      children: renderConfigFields()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"config-actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSave,\n        className: \"save-config-btn\",\n        children: \"Save Config\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onCancel,\n        className: \"cancel-config-btn\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 9\n  }, this);\n}\n_s(StepConfigEditor, \"cH9wrcTMHdbKleJN5GVLXkUWeOk=\", false, function () {\n  return [useAppContext];\n});\n_c = StepConfigEditor;\nfunction WorkflowDetail() {\n  _s2();\n  var _activeTask$status, _activeTask$status2, _activeTask$status3, _latestRun$status;\n  const {\n    selectedWorkflow,\n    tasks,\n    fetchTasks,\n    addStepToWorkflow,\n    deleteStepFromWorkflow,\n    runMultiStepWorkflow\n  } = useAppContext();\n  const [skipOnError, setSkipOnError] = useState(true);\n  const [isRunning, setIsRunning] = useState(false);\n  const [runResult, setRunResult] = useState(null);\n  const [isStopping, setIsStopping] = useState(false);\n  const [stopResult, setStopResult] = useState(null);\n  const [activeTaskId, setActiveTaskId] = useState(null);\n  const [editingStepId, setEditingStepId] = useState(null);\n  const [newStepType, setNewStepType] = useState('delay');\n  useEffect(() => {\n    setRunResult(null);\n    setStopResult(null);\n    setIsRunning(false);\n    setIsStopping(false);\n    setActiveTaskId(null);\n    setEditingStepId(null);\n  }, [selectedWorkflow]);\n  useEffect(() => {\n    if (activeTaskId && tasks) {\n      const currentActiveTask = tasks.find(task => task.id === activeTaskId);\n      if (currentActiveTask) {\n        var _currentActiveTask$st;\n        if (!['running', 'pending', 'stopping'].includes((_currentActiveTask$st = currentActiveTask.status) === null || _currentActiveTask$st === void 0 ? void 0 : _currentActiveTask$st.toLowerCase())) {\n          setActiveTaskId(null);\n        }\n      } else {\n        setActiveTaskId(null);\n      }\n    } else if (activeTaskId && !tasks) {\n      setActiveTaskId(null);\n    }\n  }, [tasks, activeTaskId]);\n  const handleAddStep = () => {\n    if (!selectedWorkflow) return;\n    console.log('Add Step button clicked');\n    console.log('Selected Workflow ID:', selectedWorkflow.id);\n    console.log('New Step Type:', newStepType);\n    addStepToWorkflow(selectedWorkflow.id, newStepType);\n  };\n  const handleDeleteStep = stepId => {\n    if (!selectedWorkflow) return;\n    if (window.confirm('Are you sure you want to delete this step?')) {\n      deleteStepFromWorkflow(selectedWorkflow.id, stepId);\n      if (editingStepId === stepId) {\n        setEditingStepId(null);\n      }\n    }\n  };\n  const handleEditStep = stepId => {\n    setEditingStepId(editingStepId === stepId ? null : stepId);\n  };\n  const handleConfigSaved = () => {\n    setEditingStepId(null);\n  };\n  const handleRunWorkflow = async () => {\n    if (!selectedWorkflow) return;\n    setIsRunning(true);\n    setRunResult(null);\n    setStopResult(null);\n    setActiveTaskId(null);\n    try {\n      console.log('Running multi-step workflow with ID:', selectedWorkflow.id);\n      const result = await runMultiStepWorkflow(selectedWorkflow.id);\n      console.log('runMultiStepWorkflow result:', result);\n      setRunResult(result);\n      if (result.success && result.taskId) {\n        console.log(\"Multi-step workflow started with task ID:\", result.taskId);\n        setActiveTaskId(result.taskId);\n      } else {\n        setActiveTaskId(null);\n      }\n    } catch (error) {\n      setActiveTaskId(null);\n      setRunResult({\n        success: false,\n        message: `Error running workflow: ${error.message}`\n      });\n      console.error(\"Error in handleRunWorkflow:\", error);\n    } finally {\n      setIsRunning(false);\n    }\n  };\n  const handleStopTask = async taskId => {\n    if (!taskId) return;\n    setIsStopping(true);\n    setStopResult(null);\n    console.log(\"Requesting stop for task:\", taskId);\n    try {\n      const response = await fetch(`/api/v1/stop-task/${taskId}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        console.error(\"Stop request failed:\", data.detail || 'Failed response from server');\n        setStopResult({\n          success: false,\n          message: `Stop request failed: ${data.detail || 'Unknown error'}`\n        });\n      } else {\n        setStopResult({\n          success: true,\n          message: data.message || 'Stop request sent successfully.'\n        });\n      }\n      setTimeout(() => {\n        if (fetchTasks) fetchTasks();\n      }, 1500);\n    } catch (error) {\n      console.error(\"Error stopping task (network/parse issue):\", error);\n      setStopResult({\n        success: false,\n        message: `Error: ${error.message}`\n      });\n      setTimeout(() => {\n        if (fetchTasks) fetchTasks();\n      }, 1500);\n    } finally {\n      setIsStopping(false);\n    }\n  };\n  const getLatestRun = () => {\n    if (!selectedWorkflow || !tasks || tasks.length === 0) return null;\n    const relatedTasks = tasks.filter(task => task.description && task.description.startsWith(`${selectedWorkflow.name} (Multi-Step Run)`));\n    if (relatedTasks.length === 0) return null;\n    relatedTasks.sort((a, b) => new Date(b.startTime) - new Date(a.startTime));\n    return relatedTasks[0];\n  };\n  const latestRun = getLatestRun();\n  const activeTask = activeTaskId ? tasks === null || tasks === void 0 ? void 0 : tasks.find(task => task.id === activeTaskId) : null;\n  const isTaskStoppable = activeTask && ['running', 'pending', 'stopping'].includes((_activeTask$status = activeTask.status) === null || _activeTask$status === void 0 ? void 0 : _activeTask$status.toLowerCase());\n\n  // +++ DEBUG LOG +++\n  console.log('WorkflowDetail Render - isTaskStoppable:', isTaskStoppable, 'activeTask:', activeTask, 'isRunning:', isRunning, 'selectedWorkflow:', selectedWorkflow);\n  console.log('WorkflowDetail DOM Debug - Button rendering conditions check');\n  console.log('Button Disabled Logic:', isRunning || !selectedWorkflow || !selectedWorkflow.steps || selectedWorkflow.steps.length === 0);\n  if (selectedWorkflow) {\n    console.log('Steps Check:', selectedWorkflow.steps ? `${selectedWorkflow.steps.length} steps` : 'No steps array');\n  }\n  // +++ END DEBUG LOG +++\n\n  // --- Helper Function to generate descriptive text for a step ---\n  const getStepDescription = step => {\n    if (!step) return 'Unknown Step';\n    const config = step.config || {};\n    switch (step.type) {\n      case 'delay':\n        return `Delay for ${config.duration_seconds || '?'} seconds`;\n      case 'stake':\n        return `Stake ${config.amount_mon || '?'} MON (${config.contract_type || 'kitsu'})`;\n      case 'swap':\n        // Use amount_str for swap as per config\n        return `Swap ${config.amount_str || '?'} ${config.token_from_symbol || '?'} to ${config.token_to_symbol || '?'}`;\n      case 'deploy':\n        return `Deploy Contract: ${config.contract_name || '?'}`;\n      case 'send':\n        return `Send ${config.amount_mon || '?'} MON ${config.mode === 'single' ? `to ${config.recipient_address || '?'}` : '(Random Recipient)'}`;\n      case 'bebop':\n        return `Bebop: Wrap/Unwrap ${config.amount_mon || '?'} MON`;\n      case 'izumi':\n        return `Izumi: Wrap/Unwrap ${config.amount_mon || '?'} MON`;\n      case 'lilchogstars':\n        return `Mint Lilchogstars (Qty: ${config.quantity || '?'})`;\n      case 'mono':\n        return `Mono Transaction: Send ${config.value_mon || '?'} MON to ${config.recipient_address || '?'}`;\n      case 'rubic':\n        return `Rubic: Swap ${config.amount_mon || '?'} MON to USDT`;\n      case 'ambient':\n        const inToken = config.token_in_symbol || 'Random';\n        const outToken = config.token_out_symbol || 'Random';\n        return `Ambient: Swap ${config.amount_percent || 100}% ${inToken} to ${outToken}`;\n      case 'apriori':\n        return `Apriori: Full Stake/Unstake/Claim Cycle`;\n      case 'bean':\n        const beanDir = config.direction === 'to_token' ? `MON to ${config.token_symbol || '?'}` : `${config.token_symbol || '?'} to MON`;\n        // Use amount (float) for bean as per config\n        return `Bean: Swap ${config.amount || '?'} (${beanDir})`;\n      case 'bima':\n        const lendPercent = config.percent_to_lend ? `${config.percent_to_lend[0]}-${config.percent_to_lend[1]}%` : 'Default %';\n        return `Bima: Lend Cycle (${lendPercent})`;\n      default:\n        return `Unknown Step Type: ${step.type}`;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"workflow-detail\",\n    children: !selectedWorkflow ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-workflow-selected\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No workflow selected. Please select a workflow from the list.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"workflow-title-bar\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: selectedWorkflow.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            gap: '10px',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              background: 'white',\n              border: '1px solid #ddd',\n              borderRadius: '5px',\n              padding: '8px 12px',\n              fontSize: '0.9rem',\n              cursor: 'pointer',\n              display: 'flex',\n              alignItems: 'center',\n              gap: '5px'\n            },\n            disabled: isRunning,\n            children: [\"Run Mode \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\u25BC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 26\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              background: 'white',\n              border: '1px solid #ddd',\n              borderRadius: '5px',\n              padding: '8px 12px',\n              fontSize: '0.9rem',\n              cursor: 'pointer',\n              display: 'flex',\n              alignItems: 'center',\n              gap: '5px'\n            },\n            disabled: isRunning || isTaskStoppable,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uD83D\\uDDD3\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 17\n            }, this), \" Schedule\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'block',\n              position: 'relative',\n              zIndex: 1000\n            },\n            children: isTaskStoppable && !isStopping && ((_activeTask$status2 = activeTask.status) === null || _activeTask$status2 === void 0 ? void 0 : _activeTask$status2.toLowerCase()) !== 'stopping' ? /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleStopTask(activeTaskId),\n              style: {\n                background: '#dc3545',\n                color: 'white',\n                border: 'none',\n                borderRadius: '5px',\n                padding: '8px 12px',\n                fontWeight: 'bold',\n                cursor: 'pointer',\n                display: 'block'\n              },\n              children: \"Stop\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleRunWorkflow,\n              style: {\n                background: 'purple',\n                color: 'white',\n                border: 'none',\n                borderRadius: '5px',\n                padding: '8px 12px',\n                fontWeight: 'bold',\n                cursor: 'pointer',\n                display: 'block'\n              },\n              disabled: isRunning || isStopping || (activeTask === null || activeTask === void 0 ? void 0 : (_activeTask$status3 = activeTask.status) === null || _activeTask$status3 === void 0 ? void 0 : _activeTask$status3.toLowerCase()) === 'stopping' || !selectedWorkflow || !selectedWorkflow.steps || selectedWorkflow.steps.length === 0,\n              children: isRunning || isStopping ? 'Starting...' : 'Run now'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 11\n      }, this), runResult && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `run-result ${runResult.success ? 'success' : 'error'}`,\n        children: [runResult.message, runResult.success && runResult.taskId && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-id\",\n          children: [\"Task ID: \", runResult.taskId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 13\n      }, this), stopResult && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `run-result ${stopResult.success ? 'success' : 'error'}`,\n        children: stopResult.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 13\n      }, this), latestRun && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"latest-run-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"latest-run-title\",\n          children: \"Latest Run:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"latest-run-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: `status status-${(_latestRun$status = latestRun.status) === null || _latestRun$status === void 0 ? void 0 : _latestRun$status.toLowerCase()}`,\n            children: latestRun.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"latest-run-time\",\n            children: latestRun.startTime.toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"latest-run-taskid\",\n            children: [\" (ID: \", latestRun.id, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"workflow-schedule\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"schedule-info\",\n          children: [\"Execute at 19:22 - 20:22 \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"repeat-icon\",\n            children: \"\\uD83D\\uDD04\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 40\n          }, this), \" every day\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"info-icon\",\n            title: \"Schedule information\",\n            children: \"\\u24D8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-handling\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: \"skip-on-error\",\n            checked: skipOnError,\n            onChange: () => setSkipOnError(!skipOnError)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"skip-on-error\",\n            children: \"Skip on Error (Local UI Only)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"workflow-steps\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Steps\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 13\n        }, this), (!selectedWorkflow.steps || selectedWorkflow.steps.length === 0) && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No steps defined for this workflow yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 82\n        }, this), selectedWorkflow.steps && selectedWorkflow.steps.map((step, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"workflow-step\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"step-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"step-number\",\n              children: [\"#\", index + 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"step-title\",\n              children: getStepDescription(step)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"step-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"step-action edit-step\",\n                title: \"Edit step configuration\",\n                onClick: () => handleEditStep(step.step_id),\n                children: \"\\u270F\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 485,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"step-action delete-step\",\n                title: \"Delete step\",\n                onClick: () => handleDeleteStep(step.step_id),\n                children: \"\\uD83D\\uDDD1\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 492,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"step-action expand-step\",\n                onClick: () => handleEditStep(step.step_id),\n                children: editingStepId === step.step_id ? '▲' : '▼'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 499,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 17\n          }, this), editingStepId === step.step_id && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"step-details\",\n            children: /*#__PURE__*/_jsxDEV(StepConfigEditor, {\n              workflowId: selectedWorkflow.id,\n              step: step,\n              onConfigChange: handleConfigSaved,\n              onCancel: () => setEditingStepId(null)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 510,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 509,\n            columnNumber: 19\n          }, this)]\n        }, step.step_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-step\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            value: newStepType,\n            onChange: e => setNewStepType(e.target.value),\n            className: \"add-step-select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"delay\",\n              children: \"Delay\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 527,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"stake\",\n              children: \"Stake (MON)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 528,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"swap\",\n              children: \"Swap\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 529,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"deploy\",\n              children: \"Deploy Contract\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 530,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"send\",\n              children: \"Send MON\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 531,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"bebop\",\n              children: \"Bebop Wrap/Unwrap\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"izumi\",\n              children: \"Izumi Wrap/Unwrap\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 533,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"lilchogstars\",\n              children: \"Lilchogstars Mint\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 534,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"mono\",\n              children: \"Mono Transaction\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 535,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"rubic\",\n              children: \"Rubic Swap\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 536,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"ambient\",\n              children: \"Ambient Swap\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 537,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"apriori\",\n              children: \"Apriori Cycle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 538,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"bean\",\n              children: \"Bean Swap\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 539,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"bima\",\n              children: \"Bima Lend\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 540,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"add-step-btn\",\n            onClick: handleAddStep,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 543,\n              columnNumber: 17\n            }, this), \" Add Step\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"workflow-footer\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delete-workflow-btn\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uD83D\\uDDD1\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 15\n          }, this), \" Delete Workflow\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 548,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 334,\n    columnNumber: 5\n  }, this);\n}\n_s2(WorkflowDetail, \"AUJ85LfiKwIvT1nG0x28iFdo/9U=\", false, function () {\n  return [useAppContext];\n});\n_c2 = WorkflowDetail;\nexport default WorkflowDetail;\nvar _c, _c2;\n$RefreshReg$(_c, \"StepConfigEditor\");\n$RefreshReg$(_c2, \"WorkflowDetail\");","map":{"version":3,"names":["React","useState","useEffect","useAppContext","jsxDEV","_jsxDEV","Fragment","_Fragment","StepConfigEditor","workflowId","step","onConfigChange","onCancel","_s","updateStepConfig","localConfig","setLocalConfig","config","handleInputChange","event","name","value","type","checked","target","prevConfig","Number","handleSave","step_id","renderConfigFields","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","duration_seconds","onChange","min","contract_type","amount","placeholder","from_token","to_token","onClick","_c","WorkflowDetail","_s2","_activeTask$status","_activeTask$status2","_activeTask$status3","_latestRun$status","selectedWorkflow","tasks","fetchTasks","addStepToWorkflow","deleteStepFromWorkflow","runMultiStepWorkflow","skipOnError","setSkipOnError","isRunning","setIsRunning","runResult","setRunResult","isStopping","setIsStopping","stopResult","setStopResult","activeTaskId","setActiveTaskId","editingStepId","setEditingStepId","newStepType","setNewStepType","currentActiveTask","find","task","_currentActiveTask$st","includes","status","toLowerCase","handleAddStep","console","log","handleDeleteStep","stepId","window","confirm","handleEditStep","handleConfigSaved","handleRunWorkflow","result","success","taskId","error","message","handleStopTask","response","fetch","method","headers","data","json","ok","detail","setTimeout","getLatestRun","length","relatedTasks","filter","description","startsWith","sort","a","b","Date","startTime","latestRun","activeTask","isTaskStoppable","steps","getStepDescription","amount_mon","amount_str","token_from_symbol","token_to_symbol","contract_name","mode","recipient_address","quantity","value_mon","inToken","token_in_symbol","outToken","token_out_symbol","amount_percent","beanDir","direction","token_symbol","lendPercent","percent_to_lend","style","display","gap","alignItems","background","border","borderRadius","padding","fontSize","cursor","disabled","position","zIndex","color","fontWeight","toLocaleString","title","map","index","e","_c2","$RefreshReg$"],"sources":["C:/Users/cymst/Documents/monad bot/frontend/src/components/WorkflowDetail.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useAppContext } from '../context/AppContext';\nimport './WorkflowDetail.css';\n\n// Component for editing a specific step's configuration\nfunction StepConfigEditor({ workflowId, step, onConfigChange, onCancel }) {\n    const { updateStepConfig } = useAppContext();\n    const [localConfig, setLocalConfig] = useState({ ...step.config }); // Initialize with current config\n\n    useEffect(() => {\n        // Reset local config if the step changes\n        setLocalConfig({ ...step.config });\n    }, [step]);\n\n    const handleInputChange = (event) => {\n        const { name, value, type, checked } = event.target;\n        setLocalConfig(prevConfig => ({\n            ...prevConfig,\n            [name]: type === 'checkbox' ? checked : (type === 'number' ? Number(value) || 0 : value) // Handle different input types\n        }));\n    };\n\n    const handleSave = () => {\n        updateStepConfig(workflowId, step.step_id, localConfig);\n        onConfigChange(); // Notify parent that config was saved/updated\n    };\n\n    // Render form fields based on step type\n    const renderConfigFields = () => {\n        switch (step.type) {\n            case 'delay':\n                return (\n                    <div className=\"form-group\">\n                        <label htmlFor={`duration_${step.step_id}`}>Duration (seconds):</label>\n                        <input\n                            type=\"number\"\n                            id={`duration_${step.step_id}`}\n                            name=\"duration_seconds\"\n                            value={localConfig.duration_seconds || ''}\n                            onChange={handleInputChange}\n                            min=\"1\"\n                        />\n                    </div>\n                );\n            case 'stake': // Example for stake\n                return (\n                    <>\n                        <div className=\"form-group\">\n                            <label htmlFor={`contract_type_${step.step_id}`}>Contract Type:</label>\n                            <select\n                                id={`contract_type_${step.step_id}`}\n                                name=\"contract_type\"\n                                value={localConfig.contract_type || 'kitsu'}\n                                onChange={handleInputChange}\n                            >\n                                <option value=\"kitsu\">Kitsu</option>\n                                {/* Add other contract types if needed */}\n                            </select>\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor={`amount_${step.step_id}`}>Amount:</label>\n                            <input\n                                type=\"text\" // Use text for potential large numbers or decimals\n                                id={`amount_${step.step_id}`}\n                                name=\"amount\"\n                                value={localConfig.amount || ''}\n                                onChange={handleInputChange}\n                                placeholder=\"e.g., 0.1\"\n                            />\n                             <span className=\"input-suffix\">MON</span>\n                        </div>\n                    </>\n                );\n            case 'swap': // Example for swap\n                 return (\n                     <>\n                         <div className=\"form-group\">\n                             <label htmlFor={`from_token_${step.step_id}`}>From Token:</label>\n                             <input\n                                 type=\"text\"\n                                 id={`from_token_${step.step_id}`}\n                                 name=\"from_token\"\n                                 value={localConfig.from_token || ''}\n                                 onChange={handleInputChange}\n                                 placeholder=\"e.g., MON\"\n                             />\n                         </div>\n                         <div className=\"form-group\">\n                             <label htmlFor={`to_token_${step.step_id}`}>To Token:</label>\n                             <input\n                                 type=\"text\"\n                                 id={`to_token_${step.step_id}`}\n                                 name=\"to_token\"\n                                 value={localConfig.to_token || ''}\n                                 onChange={handleInputChange}\n                                 placeholder=\"e.g., USDC\"\n                             />\n                         </div>\n                         <div className=\"form-group\">\n                             <label htmlFor={`amount_swap_${step.step_id}`}>Amount:</label>\n                             <input\n                                 type=\"text\"\n                                 id={`amount_swap_${step.step_id}`}\n                                 name=\"amount\"\n                                 value={localConfig.amount || ''}\n                                 onChange={handleInputChange}\n                                 placeholder=\"e.g., 100\"\n                             />\n                         </div>\n                         {/* Add slippage, recipient etc. if needed */}\n                     </>\n                 );\n            // Add cases for other step types (deploy, send, etc.)\n            default:\n                return <p>No configuration available for step type: {step.type}</p>;\n        }\n    };\n\n    return (\n        <div className=\"step-config-editor\">\n            <h4>Configure Step: {step.type}</h4>\n            <div className=\"config-form\">\n                {renderConfigFields()}\n            </div>\n            <div className=\"config-actions\">\n                <button onClick={handleSave} className=\"save-config-btn\">Save Config</button>\n                <button onClick={onCancel} className=\"cancel-config-btn\">Cancel</button>\n            </div>\n        </div>\n    );\n}\n\nfunction WorkflowDetail() {\n  const {\n    selectedWorkflow,\n    tasks,\n    fetchTasks,\n    addStepToWorkflow,\n    deleteStepFromWorkflow,\n    runMultiStepWorkflow,\n  } = useAppContext();\n\n  const [skipOnError, setSkipOnError] = useState(true);\n  const [isRunning, setIsRunning] = useState(false);\n  const [runResult, setRunResult] = useState(null);\n  const [isStopping, setIsStopping] = useState(false);\n  const [stopResult, setStopResult] = useState(null);\n  const [activeTaskId, setActiveTaskId] = useState(null);\n  const [editingStepId, setEditingStepId] = useState(null);\n  const [newStepType, setNewStepType] = useState('delay');\n\n  useEffect(() => {\n    setRunResult(null);\n    setStopResult(null);\n    setIsRunning(false);\n    setIsStopping(false);\n    setActiveTaskId(null);\n    setEditingStepId(null);\n  }, [selectedWorkflow]);\n\n  useEffect(() => {\n    if (activeTaskId && tasks) {\n      const currentActiveTask = tasks.find(task => task.id === activeTaskId);\n      if (currentActiveTask) {\n        if (!['running', 'pending', 'stopping'].includes(currentActiveTask.status?.toLowerCase())) {\n          setActiveTaskId(null);\n        }\n      } else {\n          setActiveTaskId(null);\n      }\n    } else if (activeTaskId && !tasks) {\n         setActiveTaskId(null);\n    }\n  }, [tasks, activeTaskId]);\n\n  const handleAddStep = () => {\n      if (!selectedWorkflow) return;\n      console.log('Add Step button clicked');\n      console.log('Selected Workflow ID:', selectedWorkflow.id);\n      console.log('New Step Type:', newStepType);\n      addStepToWorkflow(selectedWorkflow.id, newStepType);\n  };\n\n  const handleDeleteStep = (stepId) => {\n      if (!selectedWorkflow) return;\n      if (window.confirm('Are you sure you want to delete this step?')) {\n          deleteStepFromWorkflow(selectedWorkflow.id, stepId);\n          if (editingStepId === stepId) {\n              setEditingStepId(null);\n          }\n      }\n  };\n\n  const handleEditStep = (stepId) => {\n      setEditingStepId(editingStepId === stepId ? null : stepId);\n  };\n\n  const handleConfigSaved = () => {\n      setEditingStepId(null);\n  };\n\n  const handleRunWorkflow = async () => {\n    if (!selectedWorkflow) return;\n    setIsRunning(true);\n    setRunResult(null);\n    setStopResult(null);\n    setActiveTaskId(null);\n\n    try {\n      console.log('Running multi-step workflow with ID:', selectedWorkflow.id);\n      const result = await runMultiStepWorkflow(selectedWorkflow.id);\n      console.log('runMultiStepWorkflow result:', result);\n      setRunResult(result);\n\n      if (result.success && result.taskId) {\n        console.log(\"Multi-step workflow started with task ID:\", result.taskId);\n        setActiveTaskId(result.taskId);\n      } else {\n          setActiveTaskId(null);\n      }\n    } catch (error) {\n      setActiveTaskId(null);\n      setRunResult({\n        success: false,\n        message: `Error running workflow: ${error.message}`\n      });\n       console.error(\"Error in handleRunWorkflow:\", error);\n    } finally {\n      setIsRunning(false);\n    }\n  };\n\n  const handleStopTask = async (taskId) => {\n    if (!taskId) return;\n\n    setIsStopping(true);\n    setStopResult(null);\n    console.log(\"Requesting stop for task:\", taskId);\n\n    try {\n      const response = await fetch(`/api/v1/stop-task/${taskId}`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n      });\n      const data = await response.json();\n\n      if (!response.ok) {\n        console.error(\"Stop request failed:\", data.detail || 'Failed response from server');\n        setStopResult({ success: false, message: `Stop request failed: ${data.detail || 'Unknown error'}` });\n      } else {\n         setStopResult({ success: true, message: data.message || 'Stop request sent successfully.' });\n      }\n       setTimeout(() => { if (fetchTasks) fetchTasks(); }, 1500);\n\n    } catch (error) {\n      console.error(\"Error stopping task (network/parse issue):\", error);\n      setStopResult({ success: false, message: `Error: ${error.message}` });\n      setTimeout(() => { if (fetchTasks) fetchTasks(); }, 1500);\n    } finally {\n      setIsStopping(false);\n    }\n  };\n\n  const getLatestRun = () => {\n    if (!selectedWorkflow || !tasks || tasks.length === 0) return null;\n    const relatedTasks = tasks.filter(task =>\n        task.description && task.description.startsWith(`${selectedWorkflow.name} (Multi-Step Run)`)\n    );\n    if (relatedTasks.length === 0) return null;\n    relatedTasks.sort((a, b) => new Date(b.startTime) - new Date(a.startTime));\n    return relatedTasks[0];\n  };\n\n  const latestRun = getLatestRun();\n\n  const activeTask = activeTaskId ? tasks?.find(task => task.id === activeTaskId) : null;\n  const isTaskStoppable = activeTask && ['running', 'pending', 'stopping'].includes(activeTask.status?.toLowerCase());\n\n  // +++ DEBUG LOG +++\n  console.log('WorkflowDetail Render - isTaskStoppable:', isTaskStoppable, 'activeTask:', activeTask, 'isRunning:', isRunning, 'selectedWorkflow:', selectedWorkflow);\n  console.log('WorkflowDetail DOM Debug - Button rendering conditions check');\n  console.log('Button Disabled Logic:', isRunning || !selectedWorkflow || !selectedWorkflow.steps || selectedWorkflow.steps.length === 0);\n  if (selectedWorkflow) {\n    console.log('Steps Check:', selectedWorkflow.steps ? `${selectedWorkflow.steps.length} steps` : 'No steps array');\n  }\n  // +++ END DEBUG LOG +++\n\n  // --- Helper Function to generate descriptive text for a step ---\n  const getStepDescription = (step) => {\n    if (!step) return 'Unknown Step';\n    const config = step.config || {};\n\n    switch (step.type) {\n      case 'delay':\n        return `Delay for ${config.duration_seconds || '?'} seconds`;\n      case 'stake':\n        return `Stake ${config.amount_mon || '?'} MON (${config.contract_type || 'kitsu'})`;\n      case 'swap':\n        // Use amount_str for swap as per config\n        return `Swap ${config.amount_str || '?'} ${config.token_from_symbol || '?'} to ${config.token_to_symbol || '?'}`;\n      case 'deploy':\n        return `Deploy Contract: ${config.contract_name || '?'}`;\n      case 'send':\n        return `Send ${config.amount_mon || '?'} MON ${config.mode === 'single' ? `to ${config.recipient_address || '?'}` : '(Random Recipient)'}`;\n      case 'bebop':\n        return `Bebop: Wrap/Unwrap ${config.amount_mon || '?'} MON`;\n      case 'izumi':\n        return `Izumi: Wrap/Unwrap ${config.amount_mon || '?'} MON`;\n      case 'lilchogstars':\n        return `Mint Lilchogstars (Qty: ${config.quantity || '?'})`;\n      case 'mono':\n        return `Mono Transaction: Send ${config.value_mon || '?'} MON to ${config.recipient_address || '?'}`;\n      case 'rubic':\n        return `Rubic: Swap ${config.amount_mon || '?'} MON to USDT`;\n      case 'ambient':\n        const inToken = config.token_in_symbol || 'Random';\n        const outToken = config.token_out_symbol || 'Random';\n        return `Ambient: Swap ${config.amount_percent || 100}% ${inToken} to ${outToken}`;\n      case 'apriori':\n        return `Apriori: Full Stake/Unstake/Claim Cycle`;\n      case 'bean':\n        const beanDir = config.direction === 'to_token' ? `MON to ${config.token_symbol || '?'}` : `${config.token_symbol || '?'} to MON`;\n        // Use amount (float) for bean as per config\n        return `Bean: Swap ${config.amount || '?'} (${beanDir})`;\n      case 'bima':\n        const lendPercent = config.percent_to_lend ? `${config.percent_to_lend[0]}-${config.percent_to_lend[1]}%` : 'Default %';\n        return `Bima: Lend Cycle (${lendPercent})`;\n      default:\n        return `Unknown Step Type: ${step.type}`;\n    }\n  };\n\n  return (\n    <div className=\"workflow-detail\">\n      {!selectedWorkflow ? (\n        <div className=\"no-workflow-selected\">\n          <p>No workflow selected. Please select a workflow from the list.</p>\n        </div>\n      ) : (\n        <>\n          <div className=\"workflow-title-bar\">\n            <h2>{selectedWorkflow.name}</h2>\n            \n            <div style={{\n              display: 'flex',\n              gap: '10px',\n              alignItems: 'center'\n            }}>\n              <button\n                style={{\n                  background: 'white',\n                  border: '1px solid #ddd',\n                  borderRadius: '5px',\n                  padding: '8px 12px',\n                  fontSize: '0.9rem',\n                  cursor: 'pointer',\n                  display: 'flex',\n                  alignItems: 'center',\n                  gap: '5px'\n                }}\n                disabled={isRunning}\n              >\n                Run Mode <span>▼</span>\n              </button>\n              \n              <button\n                style={{\n                  background: 'white',\n                  border: '1px solid #ddd',\n                  borderRadius: '5px',\n                  padding: '8px 12px',\n                  fontSize: '0.9rem',\n                  cursor: 'pointer',\n                  display: 'flex',\n                  alignItems: 'center',\n                  gap: '5px'\n                }}\n                disabled={isRunning || isTaskStoppable}\n              >\n                <span>🗓️</span> Schedule\n              </button>\n              \n              <div\n                style={{\n                  display: 'block',\n                  position: 'relative',\n                  zIndex: 1000\n                }}\n              >\n                {isTaskStoppable && !isStopping && activeTask.status?.toLowerCase() !== 'stopping' ? (\n                  <button\n                    onClick={() => handleStopTask(activeTaskId)}\n                    style={{\n                      background: '#dc3545',\n                      color: 'white',\n                      border: 'none',\n                      borderRadius: '5px',\n                      padding: '8px 12px',\n                      fontWeight: 'bold',\n                      cursor: 'pointer',\n                      display: 'block'\n                    }}\n                  >\n                    Stop\n                  </button>\n                ) : (\n                  <button\n                    onClick={handleRunWorkflow}\n                    style={{\n                      background: 'purple',\n                      color: 'white',\n                      border: 'none',\n                      borderRadius: '5px',\n                      padding: '8px 12px',\n                      fontWeight: 'bold',\n                      cursor: 'pointer',\n                      display: 'block'\n                    }}\n                    disabled={isRunning || isStopping || activeTask?.status?.toLowerCase() === 'stopping' || !selectedWorkflow || !selectedWorkflow.steps || selectedWorkflow.steps.length === 0}\n                  >\n                    {isRunning || isStopping ? 'Starting...' : 'Run now'}\n                  </button>\n                )}\n              </div>\n            </div>\n          </div>\n          \n          {runResult && (\n            <div className={`run-result ${runResult.success ? 'success' : 'error'}`}>\n              {runResult.message}\n              {runResult.success && runResult.taskId && (\n                <div className=\"task-id\">Task ID: {runResult.taskId}</div>\n              )}\n            </div>\n          )}\n          \n          {stopResult && (\n            <div className={`run-result ${stopResult.success ? 'success' : 'error'}`}>\n              {stopResult.message}\n            </div>\n          )}\n          \n          {latestRun && (\n            <div className=\"latest-run-info\">\n              <div className=\"latest-run-title\">Latest Run:</div>\n              <div className=\"latest-run-details\">\n                <span className={`status status-${latestRun.status?.toLowerCase()}`}>\n                  {latestRun.status}\n                </span>\n                <span className=\"latest-run-time\">\n                  {latestRun.startTime.toLocaleString()}\n                </span>\n                <span className=\"latest-run-taskid\"> (ID: {latestRun.id})</span>\n              </div>\n            </div>\n          )}\n          \n          <div className=\"workflow-schedule\">\n            <div className=\"schedule-info\">\n              Execute at 19:22 - 20:22 <span className=\"repeat-icon\">🔄</span> every day\n              <span className=\"info-icon\" title=\"Schedule information\">ⓘ</span>\n            </div>\n            \n            <div className=\"error-handling\">\n              <input \n                type=\"checkbox\" \n                id=\"skip-on-error\" \n                checked={skipOnError}\n                onChange={() => setSkipOnError(!skipOnError)}\n              />\n              <label htmlFor=\"skip-on-error\">Skip on Error (Local UI Only)</label>\n            </div>\n          </div>\n          \n          <div className=\"workflow-steps\">\n            <h3>Steps</h3>\n            {(!selectedWorkflow.steps || selectedWorkflow.steps.length === 0) && <p>No steps defined for this workflow yet.</p>}\n            \n            {selectedWorkflow.steps && selectedWorkflow.steps.map((step, index) => (\n              <div className=\"workflow-step\" key={step.step_id}>\n                <div className=\"step-header\">\n                  <div className=\"step-number\">#{index + 1}</div>\n                  <div className=\"step-title\">{getStepDescription(step)}</div>\n                  <div className=\"step-actions\">\n                    <button\n                        className=\"step-action edit-step\"\n                        title=\"Edit step configuration\"\n                        onClick={() => handleEditStep(step.step_id)}\n                    >\n                      ✏️\n                    </button>\n                    <button\n                        className=\"step-action delete-step\"\n                        title=\"Delete step\"\n                        onClick={() => handleDeleteStep(step.step_id)}\n                    >\n                      🗑️\n                    </button>\n                    <button\n                      className=\"step-action expand-step\"\n                      onClick={() => handleEditStep(step.step_id)}\n                    >\n                      {editingStepId === step.step_id ? '▲' : '▼'}\n                    </button>\n                  </div>\n                </div>\n                \n                {editingStepId === step.step_id && (\n                  <div className=\"step-details\">\n                      <StepConfigEditor\n                          workflowId={selectedWorkflow.id}\n                          step={step}\n                          onConfigChange={handleConfigSaved}\n                          onCancel={() => setEditingStepId(null)}\n                      />\n                  </div>\n                )}\n              </div>\n            ))}\n            \n            <div className=\"add-step\">\n               <select\n                  value={newStepType}\n                  onChange={(e) => setNewStepType(e.target.value)}\n                  className=\"add-step-select\"\n               >\n                  <option value=\"delay\">Delay</option>\n                  <option value=\"stake\">Stake (MON)</option>\n                  <option value=\"swap\">Swap</option>\n                  <option value=\"deploy\">Deploy Contract</option>\n                  <option value=\"send\">Send MON</option>\n                  <option value=\"bebop\">Bebop Wrap/Unwrap</option>\n                  <option value=\"izumi\">Izumi Wrap/Unwrap</option>\n                  <option value=\"lilchogstars\">Lilchogstars Mint</option>\n                  <option value=\"mono\">Mono Transaction</option>\n                  <option value=\"rubic\">Rubic Swap</option>\n                  <option value=\"ambient\">Ambient Swap</option>\n                  <option value=\"apriori\">Apriori Cycle</option>\n                  <option value=\"bean\">Bean Swap</option>\n                  <option value=\"bima\">Bima Lend</option>\n               </select>\n              <button className=\"add-step-btn\" onClick={handleAddStep}>\n                <span>+</span> Add Step\n              </button>\n            </div>\n          </div>\n          \n          <div className=\"workflow-footer\">\n            <button className=\"delete-workflow-btn\">\n              <span>🗑️</span> Delete Workflow\n            </button>\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default WorkflowDetail; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}