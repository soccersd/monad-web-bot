{"ast":null,"code":"import React,{createContext,useState,useContext,useEffect}from'react';import{v4 as uuidv4}from'uuid';// Import UUID for step IDs\n// Define API base URL\nimport{jsx as _jsx}from\"react/jsx-runtime\";const API_BASE_URL=process.env.REACT_APP_API_BASE_URL||'http://localhost:8000';// Mock data for workflows (Added initial empty steps array)\nconst MOCK_WORKFLOWS=[{id:1,name:'Kitsu Stake',type:'stake',contractType:'kitsu',steps:[]},{id:2,name:'NFT Minter (Counter)',type:'deploy',contractType:'counter',steps:[]},{id:3,name:'Uniswap Swap',type:'swap',fromToken:'ETH',toToken:'USDC',steps:[]},{id:4,name:'Send MON',type:'send',mode:'random',steps:[]},{id:5,name:'Bebop Wrap/Unwrap',type:'bebop',steps:[]},{id:6,name:'Izumi Wrap/Unwrap',type:'izumi',steps:[]},{id:7,name:'Lilchogstars Mint',type:'lilchogstars',steps:[]},{id:8,name:'Mono Transaction',type:'mono',steps:[]},{id:9,name:'Rubic Swap MON->USDT',type:'rubic',steps:[]},{id:10,name:'Ambient Swap (Random)',type:'ambient',steps:[]},{id:11,name:'Apriori Full Cycle',type:'apriori',steps:[]},{id:12,name:'Bean Swap (MON->USDC)',type:'bean',steps:[]},{id:13,name:'Bima Lend',type:'bima',steps:[]}];// Create the context\nconst AppContext=/*#__PURE__*/createContext();// Provider component that wraps the app\nexport const AppProvider=_ref=>{let{children}=_ref;// Workflows state - using MOCK for now, but steps can be modified\nconst[workflows,setWorkflows]=useState(MOCK_WORKFLOWS);const[selectedWorkflowId,setSelectedWorkflowId]=useState(2);// Default to NFT Minter\n// Wallets state\nconst[wallets,setWallets]=useState([]);const[isLoadingWallets,setIsLoadingWallets]=useState(false);const[walletError,setWalletError]=useState(null);const[isImportingWallet,setIsImportingWallet]=useState(false);const[newWalletImport,setNewWalletImport]=useState({privateKey:'',nickname:''});// Tasks/runs state\nconst[tasks,setTasks]=useState([]);const[isLoadingTasks,setIsLoadingTasks]=useState(false);const[taskError,setTaskError]=useState(null);// Get the selected workflow object\nconst selectedWorkflow=workflows.find(w=>w.id===selectedWorkflowId)||workflows[0];// Get selected wallets\nconst selectedWallets=wallets.filter(w=>w.selected);// --- Workflow Selection ---\nconst selectWorkflow=id=>{setSelectedWorkflowId(id);};// --- Wallet Management ---\nconst toggleWalletSelection=id=>{setWallets(wallets.map(wallet=>wallet.id===id?{...wallet,selected:!wallet.selected}:wallet));};const importWallet=async function(privateKey){let nickname=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'';setIsImportingWallet(true);setWalletError(null);try{if(!privateKey.startsWith('0x')||privateKey.length!==66){throw new Error('Invalid private key format (must be 0x followed by 64 hex chars)');}const addressResponse=await fetch(`${API_BASE_URL}/api/v1/get-address-from-key`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({private_key:privateKey})});if(!addressResponse.ok){let errorMsg='Failed to derive address from key.';try{const errorData=await addressResponse.json();errorMsg=errorData.detail||errorMsg;}catch{/* Ignore */}throw new Error(errorMsg);}const addressData=await addressResponse.json();const realAddress=addressData.address;if(wallets.some(w=>w.address===realAddress)){throw new Error(`Wallet with address ${realAddress} already exists.`);}const newWallet={id:wallets.length>0?Math.max(...wallets.map(w=>w.id))+1:1,address:realAddress,privateKey:privateKey,balance:null,selected:true,nickname:nickname||`Wallet ${realAddress.substring(0,6)}...`};setWallets(prevWallets=>[...prevWallets,newWallet]);setNewWalletImport({privateKey:'',nickname:''});await fetchWalletBalance(newWallet.id,newWallet.address);return{success:true,message:'Wallet imported successfully'};}catch(error){console.error('Error importing wallet:',error);setWalletError(`Failed to import wallet: ${error.message}`);return{success:false,message:error.message};}finally{setIsImportingWallet(false);}};const fetchWalletBalances=async()=>{setIsLoadingWallets(true);setWalletError(null);const balancePromises=wallets.map(wallet=>fetchWalletBalance(wallet.id,wallet.address));try{await Promise.all(balancePromises);}catch(error){console.error('Error fetching some wallet balances:',error);}finally{setIsLoadingWallets(false);}};const fetchWalletBalance=async(walletId,walletAddress)=>{try{const response=await fetch(`${API_BASE_URL}/api/v1/get-balance/${walletAddress}`);if(!response.ok){let errorMsg=`Failed to fetch balance for ${walletAddress}. Status: ${response.status}`;try{const errorData=await response.json();errorMsg=`${errorMsg} - ${errorData.detail||'Unknown error'}`;}catch{/* Ignore */}throw new Error(errorMsg);}const data=await response.json();const balance=data.balance;setWallets(prevWallets=>prevWallets.map(wallet=>wallet.id===walletId?{...wallet,balance:balance}:wallet));}catch(error){console.error(`Error fetching balance for wallet ${walletAddress} (ID: ${walletId}):`,error);setWallets(prevWallets=>prevWallets.map(wallet=>wallet.id===walletId?{...wallet,balance:'Error'}:wallet));throw error;}};const handleWalletImportChange=(field,value)=>{setNewWalletImport(prev=>({...prev,[field]:value}));};const deleteWallet=id=>{setWallets(prevWallets=>prevWallets.filter(wallet=>wallet.id!==id));// TODO: Optionally call a backend endpoint to delete server-side if needed\n};// --- Task Management ---\nconst fetchTasks=async()=>{setIsLoadingTasks(true);setTaskError(null);try{const response=await fetch(`${API_BASE_URL}/api/v1/tasks`);if(!response.ok){throw new Error(`HTTP error! status: ${response.status}`);}const data=await response.json();const tasksData=Object.entries(data.tasks||{}).map(_ref2=>{let[id,task]=_ref2;return{id,// Use the task ID from the backend object key\n...task,startTime:new Date(task.start_time),// Ensure steps array exists in task data if provided by backend\nsteps:task.steps||[]};});tasksData.sort((a,b)=>b.startTime-a.startTime);setTasks(tasksData);}catch(error){console.error(\"Failed to fetch tasks:\",error);setTaskError(`Error fetching tasks: ${error.message}`);setTasks([]);}finally{setIsLoadingTasks(false);}};// --- Workflow Step Management ---\nconst addStepToWorkflow=(workflowId,stepType)=>{console.log('AppContext: addStepToWorkflow called with:',workflowId,stepType);// DEBUG\nsetWorkflows(prevWorkflows=>{const updatedWorkflows=prevWorkflows.map(w=>{if(w.id===workflowId){const newStep={step_id:uuidv4(),// Generate a unique ID for the step\ntype:stepType,config:getDefaultConfigForStepType(stepType)// Get default config based on type\n};// Ensure steps array exists before spreading\nconst existingSteps=Array.isArray(w.steps)?w.steps:[];return{...w,steps:[...existingSteps,newStep]};}return w;});console.log('AppContext: Workflows state AFTER update:',updatedWorkflows);// DEBUG\nreturn updatedWorkflows;});};const deleteStepFromWorkflow=(workflowId,stepId)=>{console.log('AppContext: deleteStepFromWorkflow called with:',workflowId,stepId);// DEBUG\nsetWorkflows(prevWorkflows=>prevWorkflows.map(w=>{if(w.id===workflowId){// Ensure steps array exists before filtering\nconst existingSteps=Array.isArray(w.steps)?w.steps:[];return{...w,steps:existingSteps.filter(step=>step.step_id!==stepId)};}return w;}));};const updateStepConfig=(workflowId,stepId,newConfig)=>{console.log('AppContext: updateStepConfig called with:',workflowId,stepId,newConfig);// DEBUG\nsetWorkflows(prevWorkflows=>prevWorkflows.map(w=>{if(w.id===workflowId){// Ensure steps array exists before mapping\nconst existingSteps=Array.isArray(w.steps)?w.steps:[];return{...w,steps:existingSteps.map(step=>step.step_id===stepId?{...step,config:newConfig}:step)};}return w;}));};// Helper to get default config for a new step\nconst getDefaultConfigForStepType=stepType=>{console.log('AppContext: getDefaultConfigForStepType called with:',stepType);// DEBUG\nswitch(stepType){case'delay':return{duration_seconds:60};case'stake':return{contract_type:'kitsu',amount:'0.1',amount_mon:0.1};// amount_mon for backend maybe?\ncase'swap':return{token_from_symbol:'MON',token_to_symbol:'USDC',amount_str:'1'};case'deploy':return{contract_name:'MyCounter',contract_symbol:'MCT'};case'send':return{amount_mon:0.001,mode:'random'};case'bebop':return{amount_mon:0.01};case'izumi':return{amount_mon:0.01};case'lilchogstars':return{quantity:1};case'mono':return{recipient_address:'0x052135aBEc9A037C15554dEC1ca60a5B5aD88e52',value_mon:0.005};case'rubic':return{amount_mon:0.01};case'ambient':return{amount_percent:100.0};// token_in/out default to null/random\ncase'apriori':return{};// No specific config needed for full cycle step\ncase'bean':return{direction:'to_token',token_symbol:'USDC',amount:0.001};case'bima':return{};// percent_to_lend defaults to null/backend default\ndefault:return{};}};// --- Run Multi-Step Workflow ---\nconst runMultiStepWorkflow=async function(workflowId){let rpcUrl=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'https://testnet-rpc.monad.xyz/';let delayBetweenKeys=arguments.length>2&&arguments[2]!==undefined?arguments[2]:5;const workflowToRun=workflows.find(w=>w.id===workflowId);if(!workflowToRun||selectedWallets.length===0){console.error(\"runMultiStepWorkflow Error: Workflow not found or no wallets selected\",workflowToRun,selectedWallets);return{success:false,message:\"Workflow not found or no wallets selected\"};}// Ensure steps array exists\nconst stepsToRun=Array.isArray(workflowToRun.steps)?workflowToRun.steps:[];if(stepsToRun.length===0){console.error(\"runMultiStepWorkflow Error: Workflow has no steps defined\");return{success:false,message:\"Workflow has no steps defined\"};}console.log(\"Running multi-step workflow:\",workflowToRun.name);console.log(\"Steps:\",stepsToRun);console.log(\"Selected Wallets:\",selectedWallets.map(w=>w.address));const payload={private_keys:selectedWallets.map(w=>w.privateKey),rpc_url:rpcUrl,// Allow override later if needed\ntask_description:`${workflowToRun.name} (Multi-Step Run)`,// More specific description\ndelay_between_keys_seconds:delayBetweenKeys,// Use provided or default\nsteps:stepsToRun.map(step=>({// Ensure payload matches backend model\nstep_id:step.step_id,type:step.type,// Make sure config is not null/undefined before sending\nconfig:step.config||{}}))};console.log(\"Sending payload to backend:\",payload);try{const response=await fetch(`${API_BASE_URL}/api/v1/start-multi-step-workflow`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(payload)});const result=await response.json();console.log(\"Backend response:\",response.status,result);if(!response.ok){throw new Error(result.detail||`HTTP error! status: ${response.status}`);}console.log(\"Multi-step workflow started successfully:\",result);// Fetch tasks again to show the newly started task\nawait fetchTasks();return{success:true,message:\"Workflow started successfully\",taskId:result.task_id};}catch(error){console.error(\"Failed to start multi-step workflow:\",error);setTaskError(`Error starting workflow: ${error.message}`);// Display error to user\nreturn{success:false,message:`Failed to start workflow: ${error.message}`};}};// --- (DEPRECATED/Optional) Old Run Workflow ---\n// Keep or remove based on whether single-step endpoints are still needed\nconst runWorkflow=async()=>{// ... (existing runWorkflow logic - kept for reference, but shouldn't be called by new UI) ...\nconsole.warn(\"runWorkflow (single-step) is deprecated. Use runMultiStepWorkflow.\");// Find the appropriate old endpoint based on selectedWorkflow.type\nlet endpoint='';let payloadData={/* ... construct old payload ... */};switch(selectedWorkflow.type){case'stake':endpoint='/api/v1/start-stake-cycle';break;// ... other cases ...\ndefault:return{success:false,message:\"Deprecated workflow type\"};}// Make fetch call to old endpoint...\nreturn{success:false,message:\"Use Multi-Step Runner\"};// Return failure for now\n};// --- Initialization & Polling ---\nuseEffect(()=>{// Initial fetch of tasks\nfetchTasks();// Initial fetch of balances only if wallets exist\nif(wallets.length>0){fetchWalletBalances();}// Set up polling intervals\nconst tasksInterval=setInterval(fetchTasks,10000);// Refresh tasks every 10 seconds\nconst walletsInterval=setInterval(()=>{if(wallets.length>0){// Only fetch balances if wallets exist\nfetchWalletBalances();}},30000);// Refresh wallets every 30 seconds\n// Clean up intervals on unmount\nreturn()=>{clearInterval(tasksInterval);clearInterval(walletsInterval);};},[wallets.length]);// Re-run effect if wallet count changes (to start/stop polling balances)\n// --- Context Value ---\n// Make sure all required functions and state are included\nconst value={workflows,selectedWorkflowId,selectedWorkflow,selectWorkflow,wallets,selectedWallets,toggleWalletSelection,importWallet,fetchWalletBalances,deleteWallet,// Added deleteWallet function\nisLoadingWallets,walletError,isImportingWallet,newWalletImport,handleWalletImportChange,tasks,isLoadingTasks,taskError,fetchTasks,// New Step Management Functions\naddStepToWorkflow,deleteStepFromWorkflow,updateStepConfig,// getDefaultConfigForStepType, // Not needed directly by consumers\n// New Multi-Step Runner\nrunMultiStepWorkflow,// Old runner (optional/deprecated)\nrunWorkflow};return/*#__PURE__*/_jsx(AppContext.Provider,{value:value,children:children});};// Custom hook to use the context\nexport const useAppContext=()=>{const context=useContext(AppContext);if(context===undefined){throw new Error('useAppContext must be used within an AppProvider');}return context;};export default AppContext;// Ensure default export is correct if used elsewhere","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","v4","uuidv4","jsx","_jsx","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","MOCK_WORKFLOWS","id","name","type","contractType","steps","fromToken","toToken","mode","AppContext","AppProvider","_ref","children","workflows","setWorkflows","selectedWorkflowId","setSelectedWorkflowId","wallets","setWallets","isLoadingWallets","setIsLoadingWallets","walletError","setWalletError","isImportingWallet","setIsImportingWallet","newWalletImport","setNewWalletImport","privateKey","nickname","tasks","setTasks","isLoadingTasks","setIsLoadingTasks","taskError","setTaskError","selectedWorkflow","find","w","selectedWallets","filter","selected","selectWorkflow","toggleWalletSelection","map","wallet","importWallet","arguments","length","undefined","startsWith","Error","addressResponse","fetch","method","headers","body","JSON","stringify","private_key","ok","errorMsg","errorData","json","detail","addressData","realAddress","address","some","newWallet","Math","max","balance","substring","prevWallets","fetchWalletBalance","success","message","error","console","fetchWalletBalances","balancePromises","Promise","all","walletId","walletAddress","response","status","data","handleWalletImportChange","field","value","prev","deleteWallet","fetchTasks","tasksData","Object","entries","_ref2","task","startTime","Date","start_time","sort","a","b","addStepToWorkflow","workflowId","stepType","log","prevWorkflows","updatedWorkflows","newStep","step_id","config","getDefaultConfigForStepType","existingSteps","Array","isArray","deleteStepFromWorkflow","stepId","step","updateStepConfig","newConfig","duration_seconds","contract_type","amount","amount_mon","token_from_symbol","token_to_symbol","amount_str","contract_name","contract_symbol","quantity","recipient_address","value_mon","amount_percent","direction","token_symbol","runMultiStepWorkflow","rpcUrl","delayBetweenKeys","workflowToRun","stepsToRun","payload","private_keys","rpc_url","task_description","delay_between_keys_seconds","result","taskId","task_id","runWorkflow","warn","endpoint","payloadData","tasksInterval","setInterval","walletsInterval","clearInterval","Provider","useAppContext","context"],"sources":["C:/Users/cymst/Documents/monad bot/frontend/src/context/AppContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid'; // Import UUID for step IDs\n\n// Define API base URL\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:8000';\n\n// Mock data for workflows (Added initial empty steps array)\nconst MOCK_WORKFLOWS = [\n  { id: 1, name: 'Kitsu Stake', type: 'stake', contractType: 'kitsu', steps: [] },\n  { id: 2, name: 'NFT Minter (Counter)', type: 'deploy', contractType: 'counter', steps: [] },\n  { id: 3, name: 'Uniswap Swap', type: 'swap', fromToken: 'ETH', toToken: 'USDC', steps: [] },\n  { id: 4, name: 'Send MON', type: 'send', mode: 'random', steps: [] },\n  { id: 5, name: 'Bebop Wrap/Unwrap', type: 'bebop', steps: [] },\n  { id: 6, name: 'Izumi Wrap/Unwrap', type: 'izumi', steps: [] },\n  { id: 7, name: 'Lilchogstars Mint', type: 'lilchogstars', steps: [] },\n  { id: 8, name: 'Mono Transaction', type: 'mono', steps: [] },\n  { id: 9, name: 'Rubic Swap MON->USDT', type: 'rubic', steps: [] },\n  { id: 10, name: 'Ambient Swap (Random)', type: 'ambient', steps: [] },\n  { id: 11, name: 'Apriori Full Cycle', type: 'apriori', steps: [] },\n  { id: 12, name: 'Bean Swap (MON->USDC)', type: 'bean', steps: [] },\n  { id: 13, name: 'Bima Lend', type: 'bima', steps: [] }\n];\n\n// Create the context\nconst AppContext = createContext();\n\n// Provider component that wraps the app\nexport const AppProvider = ({ children }) => {\n  // Workflows state - using MOCK for now, but steps can be modified\n  const [workflows, setWorkflows] = useState(MOCK_WORKFLOWS);\n  const [selectedWorkflowId, setSelectedWorkflowId] = useState(2); // Default to NFT Minter\n\n  // Wallets state\n  const [wallets, setWallets] = useState([]);\n  const [isLoadingWallets, setIsLoadingWallets] = useState(false);\n  const [walletError, setWalletError] = useState(null);\n  const [isImportingWallet, setIsImportingWallet] = useState(false);\n  const [newWalletImport, setNewWalletImport] = useState({ privateKey: '', nickname: '' });\n\n  // Tasks/runs state\n  const [tasks, setTasks] = useState([]);\n  const [isLoadingTasks, setIsLoadingTasks] = useState(false);\n  const [taskError, setTaskError] = useState(null);\n\n  // Get the selected workflow object\n  const selectedWorkflow = workflows.find(w => w.id === selectedWorkflowId) || workflows[0];\n\n  // Get selected wallets\n  const selectedWallets = wallets.filter(w => w.selected);\n\n  // --- Workflow Selection ---\n  const selectWorkflow = (id) => {\n    setSelectedWorkflowId(id);\n  };\n\n  // --- Wallet Management ---\n  const toggleWalletSelection = (id) => {\n    setWallets(wallets.map(wallet =>\n      wallet.id === id ? { ...wallet, selected: !wallet.selected } : wallet\n    ));\n  };\n\n  const importWallet = async (privateKey, nickname = '') => {\n    setIsImportingWallet(true);\n    setWalletError(null);\n    try {\n      if (!privateKey.startsWith('0x') || privateKey.length !== 66) {\n        throw new Error('Invalid private key format (must be 0x followed by 64 hex chars)');\n      }\n      const addressResponse = await fetch(`${API_BASE_URL}/api/v1/get-address-from-key`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ private_key: privateKey }),\n      });\n      if (!addressResponse.ok) {\n        let errorMsg = 'Failed to derive address from key.';\n        try { const errorData = await addressResponse.json(); errorMsg = errorData.detail || errorMsg; } catch { /* Ignore */ }\n        throw new Error(errorMsg);\n      }\n      const addressData = await addressResponse.json();\n      const realAddress = addressData.address;\n      if (wallets.some(w => w.address === realAddress)) {\n        throw new Error(`Wallet with address ${realAddress} already exists.`);\n      }\n      const newWallet = {\n        id: wallets.length > 0 ? Math.max(...wallets.map(w => w.id)) + 1 : 1,\n        address: realAddress,\n        privateKey: privateKey,\n        balance: null,\n        selected: true,\n        nickname: nickname || `Wallet ${realAddress.substring(0, 6)}...`\n      };\n      setWallets(prevWallets => [...prevWallets, newWallet]);\n      setNewWalletImport({ privateKey: '', nickname: '' });\n      await fetchWalletBalance(newWallet.id, newWallet.address);\n      return { success: true, message: 'Wallet imported successfully' };\n    } catch (error) {\n      console.error('Error importing wallet:', error);\n      setWalletError(`Failed to import wallet: ${error.message}`);\n      return { success: false, message: error.message };\n    } finally {\n      setIsImportingWallet(false);\n    }\n  };\n\n  const fetchWalletBalances = async () => {\n    setIsLoadingWallets(true);\n    setWalletError(null);\n    const balancePromises = wallets.map(wallet => fetchWalletBalance(wallet.id, wallet.address));\n    try {\n      await Promise.all(balancePromises);\n    } catch (error) {\n      console.error('Error fetching some wallet balances:', error);\n    } finally {\n      setIsLoadingWallets(false);\n    }\n  };\n\n  const fetchWalletBalance = async (walletId, walletAddress) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/v1/get-balance/${walletAddress}`);\n      if (!response.ok) {\n        let errorMsg = `Failed to fetch balance for ${walletAddress}. Status: ${response.status}`;\n        try { const errorData = await response.json(); errorMsg = `${errorMsg} - ${errorData.detail || 'Unknown error'}`; } catch { /* Ignore */ }\n        throw new Error(errorMsg);\n      }\n      const data = await response.json();\n      const balance = data.balance;\n      setWallets(prevWallets =>\n        prevWallets.map(wallet =>\n          wallet.id === walletId ? { ...wallet, balance: balance } : wallet\n        )\n      );\n    } catch (error) {\n      console.error(`Error fetching balance for wallet ${walletAddress} (ID: ${walletId}):`, error);\n      setWallets(prevWallets =>\n        prevWallets.map(wallet =>\n          wallet.id === walletId ? { ...wallet, balance: 'Error' } : wallet\n        )\n      );\n      throw error;\n    }\n  };\n\n  const handleWalletImportChange = (field, value) => {\n    setNewWalletImport(prev => ({ ...prev, [field]: value }));\n  };\n\n  const deleteWallet = (id) => {\n    setWallets(prevWallets => prevWallets.filter(wallet => wallet.id !== id));\n    // TODO: Optionally call a backend endpoint to delete server-side if needed\n  };\n\n  // --- Task Management ---\n  const fetchTasks = async () => {\n    setIsLoadingTasks(true);\n    setTaskError(null);\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/v1/tasks`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      const tasksData = Object.entries(data.tasks || {}).map(([id, task]) => ({\n        id, // Use the task ID from the backend object key\n        ...task,\n        startTime: new Date(task.start_time),\n        // Ensure steps array exists in task data if provided by backend\n        steps: task.steps || [],\n      }));\n      tasksData.sort((a, b) => b.startTime - a.startTime);\n      setTasks(tasksData);\n    } catch (error) {\n      console.error(\"Failed to fetch tasks:\", error);\n      setTaskError(`Error fetching tasks: ${error.message}`);\n      setTasks([]);\n    } finally {\n      setIsLoadingTasks(false);\n    }\n  };\n\n  // --- Workflow Step Management ---\n  const addStepToWorkflow = (workflowId, stepType) => {\n      console.log('AppContext: addStepToWorkflow called with:', workflowId, stepType); // DEBUG\n      setWorkflows(prevWorkflows => {\n          const updatedWorkflows = prevWorkflows.map(w => {\n              if (w.id === workflowId) {\n                  const newStep = {\n                      step_id: uuidv4(), // Generate a unique ID for the step\n                      type: stepType,\n                      config: getDefaultConfigForStepType(stepType), // Get default config based on type\n                  };\n                  // Ensure steps array exists before spreading\n                  const existingSteps = Array.isArray(w.steps) ? w.steps : [];\n                  return { ...w, steps: [...existingSteps, newStep] };\n              }\n              return w;\n          });\n          console.log('AppContext: Workflows state AFTER update:', updatedWorkflows); // DEBUG\n          return updatedWorkflows;\n        }\n      );\n  };\n\n  const deleteStepFromWorkflow = (workflowId, stepId) => {\n       console.log('AppContext: deleteStepFromWorkflow called with:', workflowId, stepId); // DEBUG\n      setWorkflows(prevWorkflows =>\n          prevWorkflows.map(w => {\n              if (w.id === workflowId) {\n                   // Ensure steps array exists before filtering\n                  const existingSteps = Array.isArray(w.steps) ? w.steps : [];\n                  return { ...w, steps: existingSteps.filter(step => step.step_id !== stepId) };\n              }\n              return w;\n          })\n      );\n  };\n\n  const updateStepConfig = (workflowId, stepId, newConfig) => {\n       console.log('AppContext: updateStepConfig called with:', workflowId, stepId, newConfig); // DEBUG\n      setWorkflows(prevWorkflows =>\n          prevWorkflows.map(w => {\n              if (w.id === workflowId) {\n                  // Ensure steps array exists before mapping\n                  const existingSteps = Array.isArray(w.steps) ? w.steps : [];\n                  return {\n                      ...w,\n                      steps: existingSteps.map(step =>\n                          step.step_id === stepId ? { ...step, config: newConfig } : step\n                      )\n                  };\n              }\n              return w;\n          })\n      );\n  };\n\n  // Helper to get default config for a new step\n  const getDefaultConfigForStepType = (stepType) => {\n      console.log('AppContext: getDefaultConfigForStepType called with:', stepType); // DEBUG\n      switch (stepType) {\n          case 'delay': return { duration_seconds: 60 };\n          case 'stake': return { contract_type: 'kitsu', amount: '0.1', amount_mon: 0.1 }; // amount_mon for backend maybe?\n          case 'swap': return { token_from_symbol: 'MON', token_to_symbol: 'USDC', amount_str: '1' };\n          case 'deploy': return { contract_name: 'MyCounter', contract_symbol: 'MCT' };\n          case 'send': return { amount_mon: 0.001, mode: 'random' };\n          case 'bebop': return { amount_mon: 0.01 };\n          case 'izumi': return { amount_mon: 0.01 };\n          case 'lilchogstars': return { quantity: 1 };\n          case 'mono': return { recipient_address: '0x052135aBEc9A037C15554dEC1ca60a5B5aD88e52', value_mon: 0.005 };\n          case 'rubic': return { amount_mon: 0.01 };\n          case 'ambient': return { amount_percent: 100.0 }; // token_in/out default to null/random\n          case 'apriori': return {}; // No specific config needed for full cycle step\n          case 'bean': return { direction: 'to_token', token_symbol: 'USDC', amount: 0.001 };\n          case 'bima': return {}; // percent_to_lend defaults to null/backend default\n          default: return {};\n      }\n  };\n\n  // --- Run Multi-Step Workflow ---\n  const runMultiStepWorkflow = async (workflowId, rpcUrl = 'https://testnet-rpc.monad.xyz/', delayBetweenKeys = 5) => {\n    const workflowToRun = workflows.find(w => w.id === workflowId);\n    if (!workflowToRun || selectedWallets.length === 0) {\n        console.error(\"runMultiStepWorkflow Error: Workflow not found or no wallets selected\", workflowToRun, selectedWallets);\n        return { success: false, message: \"Workflow not found or no wallets selected\" };\n    }\n     // Ensure steps array exists\n    const stepsToRun = Array.isArray(workflowToRun.steps) ? workflowToRun.steps : [];\n    if (stepsToRun.length === 0) {\n         console.error(\"runMultiStepWorkflow Error: Workflow has no steps defined\");\n        return { success: false, message: \"Workflow has no steps defined\" };\n    }\n\n    console.log(\"Running multi-step workflow:\", workflowToRun.name);\n    console.log(\"Steps:\", stepsToRun);\n    console.log(\"Selected Wallets:\", selectedWallets.map(w => w.address));\n\n    const payload = {\n        private_keys: selectedWallets.map(w => w.privateKey),\n        rpc_url: rpcUrl, // Allow override later if needed\n        task_description: `${workflowToRun.name} (Multi-Step Run)`, // More specific description\n        delay_between_keys_seconds: delayBetweenKeys, // Use provided or default\n        steps: stepsToRun.map(step => ({ // Ensure payload matches backend model\n            step_id: step.step_id,\n            type: step.type,\n            // Make sure config is not null/undefined before sending\n            config: step.config || {},\n        }))\n    };\n\n    console.log(\"Sending payload to backend:\", payload);\n\n    try {\n        const response = await fetch(`${API_BASE_URL}/api/v1/start-multi-step-workflow`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(payload),\n        });\n\n        const result = await response.json();\n        console.log(\"Backend response:\", response.status, result);\n\n        if (!response.ok) {\n            throw new Error(result.detail || `HTTP error! status: ${response.status}`);\n        }\n\n        console.log(\"Multi-step workflow started successfully:\", result);\n        // Fetch tasks again to show the newly started task\n        await fetchTasks();\n        return { success: true, message: \"Workflow started successfully\", taskId: result.task_id };\n\n    } catch (error) {\n        console.error(\"Failed to start multi-step workflow:\", error);\n        setTaskError(`Error starting workflow: ${error.message}`); // Display error to user\n        return { success: false, message: `Failed to start workflow: ${error.message}` };\n    }\n  };\n\n  // --- (DEPRECATED/Optional) Old Run Workflow ---\n  // Keep or remove based on whether single-step endpoints are still needed\n  const runWorkflow = async () => {\n    // ... (existing runWorkflow logic - kept for reference, but shouldn't be called by new UI) ...\n    console.warn(\"runWorkflow (single-step) is deprecated. Use runMultiStepWorkflow.\");\n    // Find the appropriate old endpoint based on selectedWorkflow.type\n    let endpoint = '';\n    let payloadData = { /* ... construct old payload ... */ };\n     switch (selectedWorkflow.type) {\n         case 'stake': endpoint = '/api/v1/start-stake-cycle'; break;\n         // ... other cases ...\n         default: return { success: false, message: \"Deprecated workflow type\" };\n     }\n     // Make fetch call to old endpoint...\n    return { success: false, message: \"Use Multi-Step Runner\" }; // Return failure for now\n  };\n\n  // --- Initialization & Polling ---\n  useEffect(() => {\n    // Initial fetch of tasks\n    fetchTasks();\n    // Initial fetch of balances only if wallets exist\n    if (wallets.length > 0) {\n        fetchWalletBalances();\n    }\n\n    // Set up polling intervals\n    const tasksInterval = setInterval(fetchTasks, 10000); // Refresh tasks every 10 seconds\n    const walletsInterval = setInterval(() => {\n         if (wallets.length > 0) { // Only fetch balances if wallets exist\n             fetchWalletBalances();\n         }\n     }, 30000); // Refresh wallets every 30 seconds\n\n    // Clean up intervals on unmount\n    return () => {\n      clearInterval(tasksInterval);\n      clearInterval(walletsInterval);\n    };\n  }, [wallets.length]); // Re-run effect if wallet count changes (to start/stop polling balances)\n\n\n  // --- Context Value ---\n  // Make sure all required functions and state are included\n  const value = {\n    workflows,\n    selectedWorkflowId,\n    selectedWorkflow,\n    selectWorkflow,\n\n    wallets,\n    selectedWallets,\n    toggleWalletSelection,\n    importWallet,\n    fetchWalletBalances,\n    deleteWallet, // Added deleteWallet function\n    isLoadingWallets,\n    walletError,\n    isImportingWallet,\n    newWalletImport,\n    handleWalletImportChange,\n\n    tasks,\n    isLoadingTasks,\n    taskError,\n    fetchTasks,\n\n    // New Step Management Functions\n    addStepToWorkflow,\n    deleteStepFromWorkflow,\n    updateStepConfig,\n    // getDefaultConfigForStepType, // Not needed directly by consumers\n\n    // New Multi-Step Runner\n    runMultiStepWorkflow,\n\n    // Old runner (optional/deprecated)\n    runWorkflow,\n  };\n\n  return <AppContext.Provider value={value}>{children}</AppContext.Provider>;\n};\n\n// Custom hook to use the context\nexport const useAppContext = () => {\n  const context = useContext(AppContext);\n  if (context === undefined) {\n    throw new Error('useAppContext must be used within an AppProvider');\n  }\n  return context;\n};\n\nexport default AppContext; // Ensure default export is correct if used elsewhere"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}